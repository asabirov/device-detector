###############
# Device Detector - The Universal Device Detection library for parsing User Agents
#
# @link http://piwik.org
# @license http://www.gnu.org/licenses/lgpl.html LGPL v3 or later
###############

# Microsoft Edge (newer versions of IE)
- regex: 'Edge[ /](\d+[\.\d]+)'
  name: 'Microsoft Edge'
  version: '$1'
  engine:
    default: 'Edge'

# 360 Browser
- regex: 'QIHU 360[ES]E'
  name: '360 Browser'
  version: ''

# 360 Phone Browser
- regex: '360 Aphone Browser(?: \((\d+[\.\d]+)(?:beta)?\))?'
  name: '360 Phone Browser'
  version: '$1'
  engine:
    default: 'WebKit'

- regex: 'Maemo Browser(?: (\d+[\.\d]+))?'
  name: 'MicroB'
  version: '$1'
  engine:
    default: 'Gecko'

#Deepnet Explorer
- regex: 'Deepnet Explorer (\d+[\.\d]+)?'
  name: 'Deepnet Explorer'
  version: '$1'





#Brave
- regex: 'Brave(?:/(\d+[\.\d]+))?'
  name: 'Brave'
  version: '$1'
  engine:
    default: 'Blink'



#Jig Browser
- regex: 'jig browser(?: web;|9i?)?(?:[/ ](\d+[\.\d]+))?'
  name: 'Jig Browser'
  version: '$1'


#Firefox
- regex: 'Firefox(?:/(\d+[\.\d]+))?'
  name: 'Firefox'
  version: '$1'
  engine:
    default: 'Gecko'
- regex: 'FxiOS/(\d+[\.\d]+)'
  name: 'Firefox'
  version: 'iOS $1'
  engine:
    default: 'WebKit'

#ANT Fresco
- regex: 'ANTFresco(?:[/ ](\d+[\.\d]+))?'
  name: 'ANT Fresco'
  version: '$1'

#Fireweb
- regex: 'Fireweb(?:/(\d+[\.\d]+))?'
  name: 'Fireweb'
  version: '$1'

#Netscape
- regex: '(?:Navigator|Netscape6?)(?:/(\d+[\.\d]+))?'
  name: 'Netscape'
  version: '$1'
  engine:
    default: '' # Mosaic in the first versions, then Gecko

#Opera
- regex: '(?:Opera Tablet.*Version|Opera/.+Opera Mobi.+Version|Mobile.+OPR)/(\d+[\.\d]+)'
  name: 'Opera Mobile'
  version: '$1'
  engine:
    default: 'Presto'
    versions:
      15: 'Blink'
- regex: 'Opera ?Mini/(?:att/)?(\d+[\.\d]+)'
  name: 'Opera Mini'
  version: '$1'
  engine:
    default: 'Presto'
- regex: 'Opera.+Edition Next.+Version/(\d+[\.\d]+)'
  name: 'Opera Next'
  version: '$1'
  engine:
    default: 'Presto'
    versions:
      15: 'Blink'
- regex: '(?:Opera|OPR)[/ ](?:9.80.*Version/)?(\d+[\.\d]+).+Edition Next'
  name: 'Opera Next'
  version: '$1'
  engine:
    default: 'Presto'
    versions:
      15: 'Blink'
- regex: '(?:Opera|OPR)[/ ]?(?:9.80.*Version/)?(\d+[\.\d]+)'
  name: 'Opera'
  version: '$1'
  engine:
    default: ''
    versions:
      3.5: 'Elektra'
      7: 'Presto'
      15: 'Blink'

#Konqueror
- regex: 'Konqueror(?:/(\d+[\.\d]+))?'
  name: 'Konqueror'
  version: '$1'
  engine:
    default: 'KHTML'
    versions:
      4: '' # multiple (KHTML or WebKit)

#Baidu Spark
- regex: '(?:(?:BD)?Spark|BIDUBrowser)[/ ](\d+[\.\d]*)'
  name: 'Baidu Spark'
  version: '$1'

#Yandex Browser
- regex: 'YaBrowser(?:/(\d+[\.\d]*))?'
  name: 'Yandex Browser'
  version: '$1'
  engine:
    default: 'Blink'

#Vivaldi
- regex: 'Vivaldi(?:/(\d+[\.\d]+))?'
  name: 'Vivaldi'
  version: '$1'
  engine:
    default: 'Blink'

#TweakStyle
- regex: 'TweakStyle(?:/(\d+[\.\d]+))?'
  name: 'TweakStyle'
  version: '$1'
  engine:
    default: 'Blink'


#Maxthon
- regex: '(?:Maxthon|MxBrowser)[ /](\d+[\.\d]+)'
  name: 'Maxthon'
  version: '$1'
  engine:
    default: '' # Trident and WebKit
    versions:
      3: 'WebKit'

- regex: '(?:Maxthon|MyIE2|Uzbl)'
  name: 'Maxthon'
  version: ''
  engine:
    default: '' # Trident and WebKit

#Epiphany
- regex: 'Epiphany(?:/(\d+[\.\d]+))?'
  name: 'Epiphany'
  version: '$1'
  engine:
    default: 'Gecko'
    versions:
      2.9.16: '' # multi engine
      2.28: 'WebKit'

# QQ Browser
- regex: 'M?QQBrowser(?:/(?:Mini)?([\.\d]+))?'
  name: 'QQ Browser'
  version: '$1'

# MIUI Browser
- regex: 'MIUIBrowser(?:/(\d+[\.\d]+))?'
  name: 'MIUI Browser'
  version: '$1'

# Coc Coc
# This browser (http://coccoc.vn/) is built on top of Chromium with
# additional features for Vietnamese users. Its regex has to be placed
# before generic Chrome regex, or Chrome regex will match first and
# the browser is mistaken as "Chrome".
- regex: 'coc_coc_browser(?:/(\d+[\.\d]+))?'
  name: 'Coc Coc'
  version: '$1'
  engine:
    default: 'WebKit'
    versions:
      28: 'Blink'

#Samsung Browser
- regex: 'Samsung ?Browser(?:[/ ](\d+[\.\d]+))?'
  name: 'Samsung Browser'
  version: '$1'

#Streamy
#This browser is built on top of Chromium.
#It should be checked first.
- regex: 'Streamy(?:/(\d+[\.\d]+))?'
  name: 'Streamy'
  version: '$1'
  engine:
    default: 'WebKit'

#Isivioo
#Andorid version of the browser is built on top of Chrome Mobile.
#It should be checked first.
- regex: 'isivioo'
  name: 'Isivioo'
  version: ''
  engine:
    default: 'WebKit'

#Chrome
- regex: 'CrMo(?:/(\d+[\.\d]+))?'
  name: 'Chrome Mobile'
  version: '$1'
  engine:
    default: 'WebKit'
    versions:
      28: 'Blink'
- regex: 'CriOS(?:/(\d+[\.\d]+))?'
  name: 'Chrome Mobile iOS'
  version: '$1'
  engine:
    default: 'WebKit'
- regex: 'Chrome(?:/(\d+[\.\d]+))? Mobile'
  name: 'Chrome Mobile'
  version: '$1'
  engine:
    default: 'WebKit'
    versions:
      28: 'Blink'
- regex: 'chromeframe(?:/(\d+[\.\d]+))?'
  name: 'Chrome Frame'
  version: '$1'
  engine:
    default: 'WebKit'
- regex: 'Chromium(?:/(\d+[\.\d]+))?'
  name: 'Chromium'
  version: '$1'
  engine:
    default: 'WebKit'
    versions:
      28: 'Blink'
- regex: 'Chrome(?:/(\d+[\.\d]+))?'
  name: 'Chrome'
  version: '$1'
  engine:
    default: 'WebKit'
    versions:
      28: 'Blink'

#UC Browser
- regex: 'UC[ ]?Browser(?:[ /]?(\d+[\.\d]+))?'
  name: 'UC Browser'
  version: '$1'
- regex: 'UCWEB(?:[ /]?(\d+[\.\d]+))?'
  name: 'UC Browser'
  version: '$1'

#Tizen Browser
- regex: '(?:Tizen|SLP) Browser(?:/(\d+[\.\d]+))?'
  name: 'Tizen Browser'
  version: '$1'

#Palmscape
- regex: 'Palmscape(?:[ /](\d+[\.\d]+))?'
  name: 'Palmscape'
  version: '$1'


#Lynx
- regex: 'Lynx(?:/(\d+[\.\d]+))?'
  name: 'Lynx'
  version: '$1'
  engine:
    default: 'Text-based'

#NCSA Mosaic
- regex: 'NCSA_Mosaic(?:/(\d+[\.\d]+))?'
  name: 'NCSA Mosaic'
  version: '$1'


#Beonex
- regex: 'Beonex(?:/(\d+[\.\d]+))?'
  name: 'Beonex'
  version: '$1'
  engine:
    default: 'Gecko'

#B-Line
- regex: 'bline(?:/(\d+[\.\d]+))?'
  name: 'B-Line'
  version: '$1'
  engine:
    default: 'WebKit'

#BrowseX
- regex: 'BrowseX \((\d+[\.\d]+)'
  name: 'BrowseX'
  version: '$1'

#Charon
- regex: 'Charon(?:[/ ](\d+[\.\d]+))?'
  name: 'Charon'
  version: '$1'

#dbrowser
- regex: 'dbrowser'
  name: 'dbrowser'
  version: ''
  engine:
    default: 'WebKit'


#Dolphin
- regex: 'Dolfin(?:/(\d+[\.\d]+))?|dolphin'
  name: 'Dolphin'
  version: '$1'
  engine:
    default: 'WebKit'

#Elinks
- regex: 'Elinks(?:/(\d+[\.\d]+))?'
  name: 'Elinks'
  version: '$1'
  engine:
    default: 'Text-based'

#Element Browser
- regex: 'Element Browser(?:[ /](\d+[\.\d]+))?'
  name: 'Element Browser'
  version: '$1'

#Firebird
- regex: 'Firebird(?! Build)(?:/(\d+[\.\d]+))?'
  name: 'Firebird'
  version: '$1'
  engine:
    default: 'Gecko'

#Galeon
- regex: 'Galeon(?:/(\d+[\.\d]+))?'
  name: 'Galeon'
  version: '$1'
  engine:
    default: 'Gecko'

#Internet Explorer
- regex: 'IEMobile[ /](\d+[\.\d]+)'
  name: 'IE Mobile'
  version: '$1'
  engine:
    default: 'Trident'
- regex: 'MSIE (\d+[\.\d]+).*XBLWP7'
  name: 'IE Mobile'
  version: '$1'
  engine:
    default: 'Trident'
- regex: 'MSIE.*Trident/4.0'
  name: 'Internet Explorer'
  version: 8.0
  engine:
    default: 'Trident'
- regex: 'MSIE.*Trident/5.0'
  name: 'Internet Explorer'
  version: 9.0
  engine:
    default: 'Trident'
- regex: 'MSIE.*Trident/6.0'
  name: 'Internet Explorer'
  version: 10.0
  engine:
    default: 'Trident'
- regex: 'Trident/7.0'
  name: 'Internet Explorer'
  version: 11.0
  engine:
    default: 'Trident'
- regex: 'MSIE (\d+[\.\d]+)'
  name: 'Internet Explorer'
  version: '$1'
  engine:
    default: 'Trident'
- regex: 'IE[ /](\d+[\.\d]++)'
  name: 'Internet Explorer'
  version: '$1'
  engine:
    default: 'Trident'


#Kindle Browser
- regex: 'Kindle/(\d+[\.\d]+)'
  name: 'Kindle Browser'
  version: '$1'


#Links
- regex: 'Links(?: \((\d+[\.\d]+))?'
  name: 'Links'
  version: '$1'
  engine:
    default: 'Text-based'

# LG Browser
- regex: 'LG Browser(?:/(\d+[\.\d]+))'
  name: 'LG Browser'
  version: '$1'

# LuaKit
- regex: 'LuaKit(?:/(\d+[\.\d]+))?'
  name: 'LuaKit'
  version: '$1'

#OmniWeb
- regex: 'OmniWeb(?:/[v]?(\d+[\.\d]+))?'
  name: 'OmniWeb'
  version: '$1'
  engine:
    default: 'WebKit'

#Mobile Silk
- regex: 'Silk(?:/(\d+[\.\d]+))?'
  name: 'Mobile Silk'
  version: '$1'
  engine:
    default: 'Blink'

#NetFront
- regex: 'NetFrontLifeBrowser(?:/(\d+[\.\d]+))?'
  name: 'NetFront Life'
  version: '$1'
  engine:
    default: 'NetFront'
- regex: 'NetFront(?:/(\d+[\.\d]+))?'
  name: 'NetFront'
  version: '$1'
  engine:
    default: 'NetFront'
- regex: 'PLAYSTATION|NINTENDO 3|AppleWebKit.+ NX/\d+\.\d+\.\d+'
  name: 'NetFront'
  version: ''

#ONE Browser
- regex: 'OneBrowser(?:[ /](\d+[\.\d]+))?'
  name: 'ONE Browser'
  version: '$1'
  engine:
    default: 'WebKit'


#Otter Browser
- regex: 'Otter(?:[ /](\d+[\.\d]+))?'
  name: 'Otter Browser'
  version: '$1'

#Seraphic Sraf
- regex: 'Sraf(?:[/ ](\d+[\.\d]+))?'
  name: 'Seraphic Sraf'
  version: '$1'
  engine:
    default: 'Blink'

#Skyfire
- regex: 'Skyfire(?:[/ ](\d+[\.\d]+))?'
  name: 'Skyfire'
  version: '$1'

#SuperBird
- regex: 'SuperBird(?:/(\d+[\.\d]+))?'
  name: 'SuperBird'
  version: '$1'

#Vision Mobile Browser
- regex: 'Vision-Browser(?:/(\d+[\.\d]+))'
  name: 'Vision Mobile Browser'
  version: '$1'

#Nokia Browser
- regex: '(?:NokiaBrowser|BrowserNG)(?:/(\d+[\.\d]+))?'
  name: 'Nokia Browser'
  version: '$1'
- regex: 'Series60/5\.0'
  name: 'Nokia Browser'
  version: '7.0'
- regex: 'Series60/(\d+[\.\d]+)'
  name: 'Nokia OSS Browser'
  version: '$1'
- regex: 'S40OviBrowser/(\d+[\.\d]+)'
  name: 'Nokia Ovi Browser'
  version: '$1'
- regex: '^Nokia|Nokia[EN]?\d+'
  name: 'Nokia Browser'
  version: ''

#BriskBard
- regex: 'BriskBard(?:/(\d+[\.\d]+))?'
  name: 'BriskBard'
  version: '$1'

#Android Browser
- regex: 'Android'
  name: 'Android Browser'
  version: ''
  engine:
    default: 'WebKit'

#Safari
- regex: '(?:(?:iPod|iPad|iPhone).+Version|MobileSafari)/(\d+[\.\d]+)'
  name: 'Mobile Safari'
  version: '$1'
  engine:
    default: 'WebKit'
- regex: 'Version/(\d+[\.\d]+).*Mobile.*Safari/'
  name: 'Mobile Safari'
  version: '$1'
  engine:
    default: 'WebKit'
- regex: '(?:iPod|iPhone|iPad)'
  name: 'Mobile Safari'
  version: ''
  engine:
    default: 'WebKit'
- regex: 'Version/(\d+[\.\d]+).*Safari/|Safari/\d+'
  name: 'Safari'
  version: '$1'
  engine:
    default: 'WebKit'
    
#Dorado
- regex: 'Dorado WAP-Browser[/ ](\d+[\.\d]+)'
  name: 'Dorado'
  version: '$1'
