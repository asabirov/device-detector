###############
# Device Detector - The Universal Device Detection library for parsing User Agents
#
# @link http://piwik.org
# @license http://www.gnu.org/licenses/lgpl.html LGPL v3 or later
###############

'Tunisie Telecom':
  regex: 'StarTrail TT[);/ ]'
  device: 'smartphone'
  model: 'StarTrail'

# SFR
SFR:
  regex: 'StarShine|StarTrail|STARADDICT|StarText|StarNaute|StarXtrem|StarTab'
  device: 'smartphone'
  models:
    - regex: 'StarXtrem[);/ ]'
      model: 'StarXtrem' # ZTE
    - regex: 'StarTrail ?4[);/ ]'
      model: 'StarTrail 4' # ZTE Blade Q
    - regex: 'StarTrail III[);/ ]'
      model: 'StarTrail 3' # ZTE
    - regex: 'StarTrail II[);/ ]'
      model: 'StarTrail 2' # Huawei Ascend Y200
    - regex: 'StarTrail[);/ ]'
      model: 'StarTrail' # ZTE
    - regex: 'StarShine II[);/ ]'
      model: 'StarShine 2' # ZTE
    - regex: 'StarShine[);/ ]'
      model: 'StarShine' # Huawei U8180
    - regex: 'STARADDICT III[);/ ]'
      model: 'Staraddict 3' # Coolpad 8861U
    - regex: 'STARADDICT II Plus[);/ ]'
      model: 'Staraddict 2 Plus' # ZTE Grand X
    - regex: 'STARADDICT II[);/ ]'
      model: 'Staraddict 2' # Alcatel One Touch 995
    - regex: 'STARADDICT[);/ ]'
      model: 'Staraddict' # ZTE
    - regex: 'StarText II[);/ ]'
      model: 'StarText 2' # ZTE
    - regex: 'StarText[);/ ]'
      model: 'StarText' # ZTE
    - regex: 'StarNaute II[);/ ]'
      model: 'StarNaute 2' # ZTE
    - regex: 'StarNaute[);/ ]'
      model: 'StarNaute' # ZTE Amigo
    - regex: 'StarTab'
      model: 'StarTab'
      device: 'tablet'

    - regex: '((?:StarShine|StarTrail|STARADDICT|StarText|StarNaute|StarXtrem)[^;/]*) Build'
      model: '$1'

# HTC
HTC:
  regex: 'HTC|Sprint (?:APA|ATP)|ADR(?!910L)[a-z0-9]+|NexusHD2|Amaze[ _]4G[);/ ]|(Desire|Sensation|Evo ?3D|IncredibleS|Wildfire|Butterfly)[ _]?([^;/]+) Build|(Amaze[ _]4G|One ?[XELSV\+]+)[);/ ]|SPV E6[05]0|One M8|X525a|PG86100|PC36100|XV6975|PJ83100[);/ ]'
  device: 'smartphone'
  models:
    # explicit smartphone models
    - regex: 'XV6975[);/ ]'
      model: 'Imagio'
    - regex: 'PG86100[);/ ]'
      model: 'Evo 3G'
    - regex: 'PC36100[);/ ]'
      model: 'Evo 4G'
    - regex: 'PJ83100[);/ ]'
      model: 'One X'
    - regex: 'ADR6300'
      model: 'Droid Incredible'
    - regex: 'ADR6400L'
      model: 'ThunderBolt'
    - regex: 'ADR6410LRA'
      model: 'Droid Incredible 3'
    - regex: 'SPV E600'
      model: 'Excalibur'
    - regex: 'SPV E650'
      model: 'Vox'
    - regex: 'X525a'
      model: 'One X+'

    - regex: 'NexusHD2' # custom rom for hd2
      model: 'HD2'
    - regex: 'HTC[ _\-]P715a'
      device: 'tablet'
      model: 'P715a'
    - regex: 'HTC[ _\-]Flyer Build'
      device: 'tablet'
      model: 'Flyer'
    - regex: 'HTC[ _\-]Flyer[ _\-]([\w]{1,5})'
      device: 'tablet'
      model: 'Flyer $1'
    - regex: 'HTC[ _\-]One[ _\-]max[);/ ]'
      device: 'phablet'
      model: 'One max'
    - regex: 'HTC[ _]([^/;]+) [0-9]+(?:\.[0-9]+)+ Build'
      model: '$1'
    - regex: 'HTC[ _]([^/;]+) Build'
      model: '$1'
    - regex: 'HTC[ _]([a-z0-9]+[ _\-]?(?:[a-z0-9_+\-])*)'
      model: '$1'
    - regex: 'HTC(?:[\-/ ])?([a-z0-9\-_]+)'
      model: '$1'
    - regex: 'HTC;(?: )?([a-z0-9 ]+)'
      model: '$1'
    - regex: '(Desire|Sensation|Evo ?3D|IncredibleS|Wildfire|Butterfly)[ _]?([^;/]+) Build'
      model: '$1 $2'
    - regex: '(Amaze[ _]4G|One ?[XELSV\+]*) Build'
      model: '$1'
    - regex: '(ADR[^;/]+) Build'
      model: '$1'
    - regex: '(ADR[a-z0-9]+)'
      model: '$1'
    - regex: '(One M8)'
      model: '$1'

# NOKIA
Nokia:
  regex: 'Nokia|Lumia|Maemo RX|portalmmm/2\.0 N7|portalmmm/2\.0 NK|nok[0-9]+|Symbian.*\s([a-z0-9]+)$|RX-51 N900'
  device: 'smartphone'
  models:
    - regex: 'RX-51 N900'
      model: 'N900'
    - regex: 'Nokia(N[0-9]+)'
      model: '$1'
    - regex: 'Nokia-([a-z0-9]+)'
      model: 'N$1'
    - regex: 'NOKIA; (?!Qt;)([a-z0-9\- ]+)'
      model: '$1'
    - regex: 'NOKIA[ _]?([a-z0-9\-]+)'
      model: '$1'
    - regex: 'NOKIA/([a-z0-9 ]+)'
      model: '$1'
    - regex: '(Lumia [a-z0-9\-]+ XL)'
      device: 'phablet'
      model: '$1'
    - regex: '(Lumia [a-z0-9\-]+)'
      model: '$1'
    - regex: 'Maemo RX-51 ([a-z0-9]+)'
      model: '$1'
    - regex: 'Maemo RX-34'
      model: 'N800'
    - regex: 'NokiaInternal|Nokia-WAP-Toolkit|Nokia-MIT-Browser|Nokia Mobile|Nokia Browser|Nokia/Series'
      model: ''
    - regex: 'portalmmm/2\.0 (N7[37]|NK[a-z0-9]+)'
      model: '$1'
    - regex: 'nok([0-9]+)'
      model: '$1'
    - regex: 'Symbian.*\s([a-z0-9]+)$'
      device: 'feature phone'
      model: '$1'


# HP
HP:
  regex: 'TouchPad/\d+\.\d+|hp-tablet|HP ?iPAQ|webOS.*P160U|HP Slate|HP [78]|Compaq [7|8]'
  device: 'smartphone'
  models:
    - regex: 'HP Slate 6 Voice Tab'
      model: 'Slate 6 VoiceTab'
      device: 'phablet'
    - regex: 'HP ([78][^/;]*) Build'
      model: 'Slate $1'
      device: 'tablet'
    - regex: 'Compaq ([78][^/;]*) Build'
      model: 'Compaq $1'
      device: 'tablet'



# Apple
Apple:
  regex: '(?:iTunes-)?AppleTV|(?:Apple-)?(?:iPad|iPhone)|iPh[0-9],[0-9]|CFNetwork'
  models:
    # specific smartphone devices
    - regex: '(?:Apple-)?iPh(?:one)?1[C,]1'
      model: 'iPhone'
      device: 'smartphone'
    - regex: '(?:Apple-)?iPh(?:one)?1[C,]2'
      model: 'iPhone 3G'
      device: 'smartphone'
    - regex: '(?:Apple-)?iPh(?:one)?2[C,]1'
      model: 'iPhone 3GS'
      device: 'smartphone'
    - regex: '(?:Apple-)?iPh(?:one)?3[C,][123]'
      model: 'iPhone 4'
      device: 'smartphone'
    - regex: '(?:Apple-)?iPh(?:one)?4[C,]1'
      model: 'iPhone 4S'
      device: 'smartphone'
    - regex: '(?:Apple-)?iPh(?:one)?5[C,][12]'
      model: 'iPhone 5'
      device: 'smartphone'
    - regex: '(?:Apple-)?iPh(?:one)?5[C,][34]'
      model: 'iPhone 5C'
      device: 'smartphone'
    - regex: '(?:Apple-)?iPh(?:one)?6[C,][12]'
      model: 'iPhone 5S'
      device: 'smartphone'
    - regex: '(?:Apple-)?iPh(?:one)?7[C,]1'
      model: 'iPhone 6 Plus'
      device: 'phablet'
    - regex: '(?:Apple-)?iPh(?:one)?7[C,]2'
      model: 'iPhone 6'
      device: 'smartphone'
    - regex: '(?:Apple-)?iPh(?:one)?8[C,]1'
      model: 'iPhone 6s'
      device: 'smartphone'
    - regex: '(?:Apple-)?iPh(?:one)?8[C,]2'
      model: 'iPhone 6s Plus'
      device: 'smartphone'
    - regex: '(?:Apple-)?iPh(?:one)?8[C,]4'
      model: 'iPhone SE'
      device: 'smartphone'

    # specific tablet devices
    - regex: '(?:Apple-)?iPad1[C,]1'
      model: 'iPad'
      device: 'tablet'
    - regex: '(?:Apple-)?iPad2[C,][1234]'
      model: 'iPad 2'
      device: 'tablet'
    - regex: '(?:Apple-)?iPad2[C,][567]'
      model: 'iPad Mini'
      device: 'tablet'
    - regex: '(?:Apple-)?iPad3[C,][123]'
      model: 'iPad 3'
      device: 'tablet'
    - regex: '(?:Apple-)?iPad3[C,][456]'
      model: 'iPad 4'
      device: 'tablet'
    - regex: '(?:Apple-)?iPad4[C,][123]'
      model: 'iPad Air'
      device: 'tablet'
    - regex: '(?:Apple-)?iPad4[C,][456]'
      model: 'iPad Mini 2'
      device: 'tablet'
    - regex: '(?:Apple-)?iPad4[C,][789]'
      model: 'iPad Mini 3'
      device: 'tablet'
    - regex: '(?:Apple-)?iPad5[C,][34]'
      model: 'iPad Air 2'
      device: 'tablet'
    - regex: '(?:Apple-)?iPad6[C,][34]'
      model: 'iPad Pro 9.7'
      device: 'tablet'
    - regex: '(?:Apple-)?iPad6[C,][78]'
      model: 'iPad Pro 12.9'
      device: 'tablet'

    - regex: '(?:iTunes-)?AppleTV'
      model: 'Apple TV'
      device: 'tv'
    - regex: '(?:Apple-)?iPad'
      model: 'iPad'
      device: 'tablet'
    - regex: '(?:Apple-)?iPhone ?(3GS?|4S?|5[CS]?|6(:? Plus)?)?'
      model: 'iPhone $1'
      device: 'smartphone'

# 3Q
3Q:
  regex: '(AC0731B|AC1024C|AC7803C|BC9710AM|EL72B|LC0720C|LC0723B|LC0725B|LC0804B|LC0808B|LC0809B|LC0810C|LC0816C|LC0901D|LC1016C|MT0724B|MT0729B|MT0729D|MT0811B|OC1020A|RC0709B|RC0710B|RC0718C|RC0719H|RC0721B|RC0722C|RC0726B|RC0734H|RC0743H|RC0817C|RC1018C|RC1019G|RC1025F|RC1301C|RC7802F|RC9711B|RC9712C|RC9716B|RC9717B|RC9724C|RC9726C|RC9727F|RC9730C|RC9731C|TS0807B|TS1013B|VM0711A|VM1017A|RC0813C|QS9719D|QS9718C|QS9715F|QS1023H|QS0815C|QS0730C|QS0728C|QS0717D|QS0716D|QS0715C|MT7801C)'
  device: 'tablet'
  model: '$1'

# Bravis
Bravis:
  regex: 'Bravis|A501 Bright'
  device: 'smartphone'
  models:
    - regex: 'A501 Bright'
      model: 'A501 Bright'
    - regex: 'Bravis[_ ]([^;\)]+) Build'
      model: '$1'

# Acer
Acer:
  regex: 'acer|(?<!ZTE BLADE )a(?:101|110|200|210|211|500|501|510|511|700|701)[);/ ]|Android.*V3[67]0[);/ ]|Android.*Z1[23456]0 Build|Android.*Z5\d{2} Build|A1-830|A1-81[01]|A3-A[12][01]|B1-7[1235][01]|B1-810|B1-A71|B3-A20|E39 Build|S5[12]0 Build|DA[0-9]+HQ?L[);/ ]'
  device: 'smartphone'
  models:
    # smart displays
    - regex: 'DA220HQL[);/ ]'
      model: 'DA220HQL'
      device: 'smart display'
    - regex: 'DA241HL[);/ ]'
      model: 'DA241HL'
      device: 'smart display'
    - regex: '(DA[0-9]+HQ?L)[);/ ]'
      model: '$1'
      device: 'smart display'

    # explicit tablet models
    - regex: 'A1-81[01]'
      model: 'Iconia A'
      device: 'tablet'
    - regex: 'A1-830'
      model: 'Iconia A1'
      device: 'tablet'
    - regex: 'A3-A[12][01]'
      model: 'Iconia A3'
      device: 'tablet'
    - regex: 'B1-7[1235][01]|B1-810|B1-A71'
      model: 'Iconia B1'
      device: 'tablet'
    - regex: 'B3-A20'
      model: 'Iconia One 10'
      device: 'tablet'

    # explicit smartphone models
    - regex: 'E39 Build'
      model: 'Liquid E700'
    - regex: 'Android.*V360[);/ ]'
      model: 'Liquid E1'
    - regex: 'Android.*V370[);/ ]'
      model: 'Liquid E2'
    - regex: 'S510 Build'
      model: 'Liquid S1'
    - regex: 'S520 Build'
      model: 'Liquid S2'
    - regex: 'Android.*Z1([2345])0 Build'
      model: 'Liquid Z$1'
    - regex: 'Android.*Z160 Build'
      model: 'Liquid Z4'
    - regex: 'Android.*Z(5\d{2}) Build'
      model: 'Liquid Z$1'
    - regex: 'Acer; ?([^;\)]+)'
      model: '$1'
    - regex: 'Acer[ _\-]?([^;\)]+) Build'
      model: '$1'
    - regex: 'acer[\-_]([a-z0-9]+)'
      model: '$1'
    - regex: 'a(101|110|200|210|211|500|501|510|511|700|701)[);/ ]'
      model: 'Iconia Tab A$1'
      device: 'tablet'


# Alcatel
Alcatel:
  regex: 'Alcatel|Alc[a-z0-9]+|One[ _]?Touch|(?:6036Y|6039H|50[16]5X|9005X|I213|5015D|5051X|6050[AFY])[);/ ]'
  device: 'smartphone'
  models:
    - regex: '50[16]5X[);/ ]'
      model: 'One Touch Pop 3'
    - regex: '5015D[);/ ]'
      model: 'One Touch Pop 3 Dual SIM'
    - regex: '5051X[);/ ]'
      model: 'One Touch Pop 4'
    - regex: '6036Y[);/ ]'
      model: 'One Touch Idol 2 mini'
    - regex: '6050[AFY][);/ ]'
      model: 'One Touch Idol 2S'
    - regex: '6039H[);/ ]'
      model: 'One Touch Idol 3'
    - regex: 'I213[);/ ]'
      model: 'One Touch Pixi 7'
      device: 'tablet'
    - regex: '9005X[);/ ]'
      model: 'One Touch Pixi 8'
      device: 'tablet'
    - regex: 'P320X'
      model: 'One Touch POP 8'
      device: 'tablet'
    - regex: 'P310X'
      model: 'One Touch POP 7'
      device: 'tablet'
    - regex: '(?:Alcatel[ _])?One[ _]?Touch([^/;\)]*)\)'
      model: 'One Touch$1'
    - regex: 'Alc([a-z0-9]+)'
      model: '$1'

# Ainol
'Ainol':
  regex: 'Numy|novo[0-9]'
  device: 'tablet'
  models:
    - regex: 'Numy[ _]([^;/]+) Build'
      model: 'Numy $1'
    - regex: 'Novo([0-9]+)[ \-]([^;/]+) Build'
      model: 'Novo $1 $2'


# Asus
Asus:
  regex: 'Asus|Transformer|TF300T|Slider SL101|PadFone|ME302(?:C|KL)|ME301T|ME371MG|ME17(?:1|2V|3X)|(?:K0[01][0-9a-z]|Z00D)[);/ ]'
  device: 'smartphone'
  models:
    # explicit tablet models
    - regex: 'ME171[);/ ]'
      model: 'Eee Pad MeMO 171'
      device: 'tablet'
    - regex: 'ME172V'
      model: 'MeMO Pad'
      device: 'tablet'
    - regex: '(?:K01[3A]|K007)[);/ ]'
      model: 'MeMO Pad 7'
      device: 'tablet'
    - regex: 'K01E[);/ ]'
      model: 'MeMO Pad 10 ME103K'
      device: 'tablet'
    - regex: 'K014[);/ ]'
      model: 'MeMO Pad 8.9'
      device: 'tablet'
    - regex: 'K010[);/ ]'
      model: 'Transformer Pad TF103C'
      device: 'tablet'
    - regex: 'K018[);/ ]'
      model: 'Transformer Pad TF103CG'
      device: 'tablet'
    - regex: 'TF300T[);/ ]'
      model: 'Transformer Pad TF300T'
      device: 'tablet'
    - regex: 'K01B[);/ ]'
      model: 'Transformer Pad TF303K'
      device: 'tablet'
    - regex: 'Slider SL101'
      model: 'Eee Pad Slider SL101'
      device: 'tablet'

    # explicit smartphone models
    - regex: '(?:ASUS_)?Z007'
      model: 'ZenFone C'
    - regex: '(?:ASUS_)?(?:Z00D|Z008D|Z00AD[AB]?)'
      model: 'ZenFone 2'
    - regex: '(?:ASUS_)?Z00[ER]D'
      model: 'ZenFone 2 Laser'
    - regex: '(?:ASUS_)?T00[IQ]'
      model: 'ZenFone 4'
    - regex: '(?:ASUS_)?T00[JF]'
      model: 'ZenFone 5'
    - regex: '(?:ASUS_)?T00P'
      model: 'ZenFone 5 LTE'
    - regex: '(?:ASUS_)?T00K'
      model: 'ZenFone 5 Lite'
    - regex: '(?:ASUS_)?(?:T00G|Z002)'
      model: 'ZenFone 6'
    - regex: '(?:ASUS_)?Z010D'
      model: 'ZenFone Max'
    - regex: '(?:ASUS_)?X014D'
      model: 'ZenFone Go Plus'
    - regex: '(?:ASUS_)?Z00[SV]D'
      model: 'ZenFone Go'
    - regex: '(?:ASUS_)?Z00UD'
      model: 'ZenFone Selfie'

    # general detections
    - regex: 'Asus(?:-|;)?([a-z0-9]+)'
      model: '$1'
    - regex: '(PadFone(?: [^;/]+)?) Build'
      model: '$1'
    - regex: '(PadFone(?: [a-z0-9]+)?)'
      model: '$1'
    - regex: '(?:Asus|Transformer) ((?:Pad |Prime )?TF[0-9a-z]+)'
      device: 'tablet'
      model: 'Transformer $1'


#Barnes & Noble
'Barnes & Noble':
  regex: 'Nook|BN[TR]V[0-9]+'
  device: 'tablet'
  models:
    - regex: 'Nook([a-z0-9]+)'
      model: 'Nook $1'
    - regex: 'Nook[ _]([^/;]+)[ _]Build'
      model: 'Nook $1'
    - regex: '(BN[TR]V[0-9]+)'
      model: 'Nook $1'


# Boway
Boway:
  regex: 'BOWAY'
  device: 'smartphone'
  models:
    - regex: 'BOWAY[ _-]([^/;]+)[ _]Build'
      model: '$1'
    - regex: '([^/;]+) Build/BOWAY'
      model: '$1'
    - regex: '.*BOWAY[ _-]([^/;]+)/'
      model: '$1'

# Brondi
Brondi:
  regex: '(?:CENTURION|GLADIATOR| GLORY|LUXURY|SENSUELLE|VICTORY)(?:[ _-]?[2-6])?[);/ ]|Surfing Tab'
  device: 'smartphone'
  models:
    - regex: 'CENTURION(?:[ _-]?([2-6]))?[);/ ]'
      model: 'CENTURION $1'
    - regex: 'GLADIATOR(?:[ _-]?([2-6]))?[);/ ]'
      model: 'GLADIATOR $1'
    - regex: 'GLORY(?:[ _-]?([2-6]))?[);/ ]'
      model: 'GLORY $1'
    - regex: 'LUXURY(?:[ _-]?([2-6]))?[);/ ]'
      model: 'LUXURY $1'
    - regex: 'SENSUELLE(?:[ _-]?([2-6]))?[);/ ]'
      model: 'SENSUELLE $1'
    - regex: 'VICTORY(?:[ _-]?([2-6]))?[);/ ]'
      model: 'VICTORY $1'

    - regex: 'Surfing Tab ([^;/]+) Build'
      model: 'SURFING TAB $1'
      device: 'tablet'
    - regex: 'Surfing Tab ([^;/]+)[);/ ]'
      model: 'SURFING TAB $1'
      device: 'tablet'


# Cube
Cube:
  regex: '(<!myPhone ?)Cube|(U[0-9]+GT|K8GT)'
  device: 'tablet'
  models:
    - regex: 'U27GT'
      model: 'Talk 8'
    - regex: 'U55GT'
      model: 'Talk 79'
    - regex: 'U65GT'
      model: 'Talk 9X'

    - regex: '(U[0-9]+GT[^;/]*) Build'
      model: '$1'
    - regex: '(U[0-9]+GT(?:[0-9]|[\-_][a-z]+)?)'
      model: '$1'

# Desay
Desay:
  regex: 'Desay'
  device: 'smartphone'
  models:
    - regex: 'Desay[ _-]?([^;/)]+) Build'
      model: '$1'
    - regex: 'Desay[ _-]?([^;/)]+)[);/ ]'
      model: '$1'


# Doov
Doov:
  regex: '(?:Doov-)?Doov[ _]'
  device: 'smartphone'
  models:
    - regex: '(?:Doov-)?Doov[ _]([^;/]+) Build'
      model: '$1'
    - regex: '(?:Doov-)?Doov[ _]([^);/]+)[);/ ]'
      model: '$1'

# Dune HD
'Dune HD':
  regex: 'DuneHD'
  device: 'tv'
  models:
    - regex: 'DuneHD/\d.\d \([a-z]+__([a-z0-9_-]+);'
      model: '$1'
    - regex: 'DuneHD/\d.\d \(([a-z0-9_-]+);'
      model: '$1'

# DNS
DNS:
  regex: '(?:DNS|AirTab)[ _\-]([^;/]+)Build|S4505M[);/ ]'
  device: 'smartphone'
  models:
    - regex: 'S4505M[);/ ]'
      model: 'S4505M'
    - regex: 'AirTab[ _\-]([^;/]+)Build'
      model: 'AirTab $1'
      device: 'tablet'
    - regex: 'DNS[ _\-]([^;/]+)Build'
      model: '$1'

# Elephone
Elephone:
  regex: 'Elephone[ _\-]([^/;]+) Build'
  device: 'smartphone'
  model: '$1'

# Rikomagic
Rikomagic:
  regex: 'MK(80[28][^/;]*) Build'
  device: 'tv'
  model: 'MK$1'

# Sony & Sony Ericsson (combined as they are mixed up)
Sony:
  regex: 'Sony(?: ?Ericsson)?|SGP|Xperia|C1[569]0[45]|C2[01]0[45]|C2305|C530[236]|C550[23]|C6[56]0[236]|C6616|C68(?:0[26]|[34]3)|C69(?:0[236]|16|43)|D200[45]|D21(?:0[45]|14)|D22(?:0[236]|12|43)|D230[2356]|D240[36]|D25(?:02|33)|D510[236]|D530[36]|D5322|D5503|D58[03]3|D65(?:0[23]|43)|D66[035]3|E2105|E2[03]03|E58[02]3|E5603|E6553|E66[358]3|E6853|F3111|F331[13]|F5121|(?:WT|LT|SO|ST|SK|MK)[0-9]+[a-z]*[0-9]*(?: Build|\))|X?L39H|XM50[ht]|W960|portalmmm/2\.0 K|S3[69]h|X10[ia]v?|E1[05][ai]v?|MT[0-9]{2}[a-z]? Build|SO-0(?:[345]D|[234]E|[12]C|[1235]F|[12]G)|R800[aix]|LiveWithWalkman'
  device: 'smartphone'
  models:
    # SONY ERICSSON: explicit smartphone models
    - regex: '(?:Sony(?:Ericsson)?)?E10[ai]v?'
      model: 'Xperia X10 mini'
      brand: 'Sony Ericsson'
    - regex: '(?:Sony(?:Ericsson)?)?U20'
      model: 'Xperia X10 mini pro'
      brand: 'Sony Ericsson'
    - regex: '(?:Sony(?:Ericsson)?)?E15[ai]v?'
      model: 'Xperia X8'
      brand: 'Sony Ericsson'
    - regex: '(?:Sony(?:Ericsson)?)?(LT15[ai]?v?|SO-01C)'
      model: 'Xperia arc'
      brand: 'Sony Ericsson'
    - regex: '(?:Sony(?:Ericsson)?)?LT18[ai]v?'
      model: 'Xperia arc S'
      brand: 'Sony Ericsson'
    - regex: '(?:Sony(?:Ericsson)?)?MT11'
      model: 'Xperia neo V'
      brand: 'Sony Ericsson'
    - regex: '(?:Sony(?:Ericsson)?)?MT15'
      model: 'Xperia neo'
      brand: 'Sony Ericsson'
    - regex: '(?:Sony(?:Ericsson)?)?MT27'
      model: 'Xperia Sola'
      brand: 'Sony Ericsson'
    - regex: '(?:Sony(?:Ericsson)?)?MK16[ai]'
      model: 'Xperia pro'
      brand: 'Sony Ericsson'
    - regex: '(?:Sony(?:Ericsson)?)?ST15[ai]'
      model: 'Xperia mini'
      brand: 'Sony Ericsson'
    - regex: '(?:Sony(?:Ericsson)?)?ST17[ai]'
      model: 'Xperia active'
      brand: 'Sony Ericsson'
    - regex: '(?:Sony(?:Ericsson)?)?ST18[ai]'
      model: 'Xperia ray'
      brand: 'Sony Ericsson'
    - regex: '(?:Sony(?:Ericsson)?)?SK17[ai]?'
      model: 'Xperia mini pro'
      brand: 'Sony Ericsson'
    - regex: '(?:Sony(?:Ericsson)?)?X10[ai]v?'
      model: 'Xperia X10'
      brand: 'Sony Ericsson'
    - regex: '(?:Sony(?:Ericsson)?)M1'
      model: 'Aspen'
      brand: 'Sony Ericsson'
    - regex: '(?:Sony(?:Ericsson)?)?R800'
      model: 'Xperia PLAY'
      brand: 'Sony Ericsson'
    - regex: '(?:Sony(?:Ericsson)?)?WT19|LiveWithWalkman'
      model: 'Live with Walkman'
      brand: 'Sony Ericsson'

    # SONY ERICSSON: explicit feature phone models
    - regex: '(?:Sony(?:Ericsson)?)?W960'
      model: 'W960'
      brand: 'Sony Ericsson'
      device: 'feature phone'
    - regex: '(?:Sony(?:Ericsson)?)?WT13'
      model: 'Mix Walkman'
      brand: 'Sony Ericsson'
      device: 'feature phone'

    # SONY: explicit smartphone models
    - regex: '(?:Sony(?:Ericsson)?)?E2105'
      model: 'Xperia E4'
    - regex: '(?:Sony(?:Ericsson)?)?E2003'
      model: 'Xperia E4G'
    - regex: '(?:Sony(?:Ericsson)?)?C190[45]'
      model: 'Xperia M'
    - regex: '(?:Sony(?:Ericsson)?)?C200[45]'
      model: 'Xperia M Dual'
    - regex: '(?:Sony(?:Ericsson)?)?C210[45]|S36h'
      model: 'Xperia L'
    - regex: '(?:Sony(?:Ericsson)?)?C2305|S39h'
      model: 'Xperia C'
    - regex: '(?:Sony(?:Ericsson)?)?E2303'
      model: 'Xperia M4 Aqua'
    - regex: '(?:Sony(?:Ericsson)?)?E5603'
      model: 'Xperia M5'
    - regex: '(?:Sony(?:Ericsson)?)?D530[36]|XM50[ht]'
      model: 'Xperia T2 Ultra'
      device: 'phablet'
    - regex: '(?:Sony(?:Ericsson)?)?D5322'
      model: 'Xperia T2 Ultra Dual'
      device: 'phablet'
    - regex: '(?:Sony(?:Ericsson)?)?D5503'
      model: 'Xperia Z1 Compact'
    - regex: '(?:Sony(?:Ericsson)?)?(?:D58[03]3|SO-02G)'
      model: 'Xperia Z3 Compact'
    - regex: '(?:Sony(?:Ericsson)?)?(?:D65(?:0[23]|43)|SO-03F)'
      model: 'Xperia Z2'
    - regex: '(?:Sony(?:Ericsson)?)?(?:D66[05]3|SO-01G)'
      model: 'Xperia Z3'
    - regex: '(?:Sony(?:Ericsson)?)?(?:D6633)'
      model: 'Xperia Z3 Dual'
    - regex: '(?:Sony(?:Ericsson)?)?(?:E6553)'
      model: 'Xperia Z3+'
    - regex: '(?:Sony(?:Ericsson)?)?(?:E58[02]3)'
      model: 'Xperia Z5 Compact'
    - regex: '(?:Sony(?:Ericsson)?)?E6653'
      model: 'Xperia Z5'
    - regex: '(?:Sony(?:Ericsson)?)?E66[38]3'
      model: 'Xperia Z5 Dual'
    - regex: '(?:Sony(?:Ericsson)?)?E6853'
      model: 'Xperia Z5 Premium'
    - regex: '(?:Sony(?:Ericsson)?)?F3111'
      model: 'Xperia XA'
    - regex: '(?:Sony(?:Ericsson)?)?F331[13]'
      model: 'Xperia E5'
    - regex: '(?:Sony(?:Ericsson)?)?SO-04E'
      model: 'Xperia A'
    - regex: '(?:Sony(?:Ericsson)?)?SO-04D'
      model: 'Xperia GX'
    - regex: '(?:Sony(?:Ericsson)?)?SO-05D'
      model: 'Xperia SX'
    - regex: 'F5121'
      model: 'Xperia X'

    # SONY: explicit tablet models
    - regex: 'SGP(?:311|312|321)[);/ ]|SO-03E'
      model: 'Xperia Tablet Z'
      device: 'tablet'
    - regex: 'SGP(?:511|512|521)[);/ ]|SO-05F'
      model: 'Xperia Tablet Z2'
      device: 'tablet'
    - regex: 'SGP(?:6[24]1)[);/ ]'
      model: 'Xperia Tablet Z3 Compact'
      device: 'tablet'
    - regex: 'SGPT(?:12|121|122|123|13|131|132|133)[);/ ]'
      model: 'Xperia Tablet S'
      device: 'tablet'

    # general detections
    - regex: '(?:Sony-)?(KDL?-?[0-9a-z]+)'
      model: '$1'
      device: 'tv'
    - regex: 'Opera TV Store.*(?:Sony-)([0-9a-z\-_]+)'
      model: '$1'
      device: 'tv'
    - regex: 'SonyEricsson([CGJKPTWZ][0-9]+[a-z]+)/'
      model: '$1'
      brand: 'Sony Ericsson'
      device: 'feature phone'
    - regex: 'Sony ?Ericsson ?([a-z0-9\-]+)'
      model: '$1'
      brand: 'Sony Ericsson'

    - regex: 'Sony (Tablet[^/;]*) Build'
      model: '$1'
      device: 'tablet'
    - regex: '(SGP[^/;]*) Build'
      model: '$1'
      device: 'tablet'
    - regex: 'Xperia ([^/;]*Tablet[^/;]*) Build'
      model: 'Xperia $1'
      device: 'tablet'
    - regex: 'Xperia ([^;/]+) Build'
      model: 'Xperia $1'
    - regex: 'Sony[ -]?([^/;]*) Build'
      model: '$1'
    - regex: 'Sony[ -]?([a-z0-9\-]+)'
      model: '$1'



# Explay
Explay:
  regex: 'Explay|ActiveD[ _]|Atlant |Informer[ _][0-9]+|CinemaTV 3G|Surfer[ _][0-9\.]|sQuad[ _][0-9\.]|Onliner[1-3]'
  device: 'tablet'
  models:
    - regex: 'ActiveD[ _]7.4[ _]3G'
      model: 'ActiveD 7.4 3G'
    - regex: 'ActiveD[ _]8.2[ _]3G'
      model: 'ActiveD 8.2 3G'
    - regex: 'CinemaTV[ _]3G'
      model: 'CinemaTV 3G'
    - regex: 'Informer[ _]([0-9]+(?:[ _]3G)?)'
      model: 'Informer $1'
    - regex: 'Surfer[ _]([0-9\.]+(?:[ _]3G)?)'
      model: 'Surfer $1'
    - regex: 'sQuad[ _]([0-9\.]+(?:[ _]3G)?)'
      model: 'sQuad $1'
    - regex: 'Onliner([1-3])'
      model: 'Onliner $1'

    - regex: 'Atlant[;/) ]'
      device: 'smartphone'
      model: 'Atlant'

    - regex: 'Explay[ _-]([^;/]+) Build'
      model: '$1'
    - regex: 'Explay[ _-]([^;/]+)[;/)]'
      model: '$1'

# Foxconn
Foxconn:
  regex: 'InFocus M[0-9]+[a-z]?'
  device: 'smartphone'
  models:
    - regex: 'InFocus M([0-9]+[a-z]?)'
      model: 'InFocus M$1'

# Fairphone
Fairphone:
  regex: '(FP1U?)[);/ ]'
  device: 'smartphone'
  model: '$1'


# Fujitsu
Fujitsu:
  regex: 'F-01F|F-02[EF]|F-05[DE]|F-06E|F-08D|F-09E'
  device: 'smartphone'
  models:
    - regex: 'F-05E'
      model: 'Arrows Tab F-05E'
      device: 'tablet'


# Gionee
Gionee:
  regex: '(?:GIO-)?GIONEE[ _-]?[a-z0-9]+|(?:Dream_D1|V188S?|GN[0-9]{3,4}[a-z]?)[);/ ]'
  device: 'smartphone'
  models:
    - regex: 'GN810[);/ ]'
      model: 'GN810'
      device: 'phablet'
    - regex: 'GN([0-9]{3,4}[a-z]?)[);/ ]'
      model: 'GN$1'
    - regex: 'V188S[);/ ]'
      model: 'V188S'
    - regex: 'V188[);/ ]'
      model: 'V188'
    - regex: '(?:(?:GIO-)?GIONEE[ _-])?Dream_D1[);/ ]'
      model: 'Dream D1'
    - regex: '(?:GIO-)?GIONEE[ _-]?([a-z0-9]+)'
      model: '$1'
      device: 'feature phone'

# Vizio
Vizio:
  regex: 'Vizio|VAP430|VTAB1008'
  device: 'tv'
  models:
    - regex: 'VAP430'
      model: 'VAP430'
    - regex: 'VTAB1008'
      device: 'tablet'
      model: 'VTAB1008'

# GOCLEVER
GOCLEVER:
  regex: 'GOCLEVER|QUANTUM|ARIES|INSIGNIA|ORION_|ELIPSO'
  device: 'smartphone'
  models:
    - regex: 'QUANTUM_(1010N|1010M|900)'
      model: 'QUANTUM $1'
      device: 'tablet'
    - regex: 'INSIGNIA_785_PRO'
      model: 'INSIGNIA 785 PRO'
      device: 'tablet'
    - regex: '(ORION|ARIES|ELIPSO)[_ ](71|101|102)'
      model: '$1 $2'
      device: 'tablet'
    - regex: 'TQ700N'
      model: 'QUANTUM 700N'
      device: 'tablet'
    - regex: '((?:QUANTUM|ARIES|INSIGNIA|ORION|ELIPSO)[ _-]?[^;/]+) Build'
      model: '$1'
    - regex: 'GOCLEVER[ _-]TAB[ _-]?([^;/]+) Build'
      model: 'TAB $1'
      device: 'tablet'
    - regex: 'GOCLEVER[ _-]?([^;/]+) Build'
      model: '$1'
    - regex: 'TAB ([^;/)]+) Build/GOCLEVER'
      model: 'TAB $1'
      device: 'tablet'
    - regex: '([^;/)]+) Build/GOCLEVER'
      model: '$1'
    - regex: 'GOCLEVER[ _-]?TAB[ _-]([^;/)]+)[;/)]'
      model: 'TAB $1'
      device: 'tablet'
    - regex: 'GOCLEVER[ _-]?([^;/)]+)[;/)]'
      model: '$1'


# Goly
Goly:
  regex: 'Goly[ _-]'
  device: 'smartphone'
  models:
    - regex: 'Goly[ _-]([^;/]+) Build'
      model: '$1'
    - regex: 'Goly[ _-]([^;/)]+)[;/)]'
      model: '$1'

# Google
Google:
  regex: 'Nexus|GoogleTV|Glass|CrKey[^a-z0-9]'
  device: 'smartphone'
  models:
    - regex: 'Glass'
      model: 'Glass'
    - regex: 'Galaxy Nexus'
      model: 'Galaxy Nexus'
    - regex: '(Nexus (?:S|4|5X?|One))'
      model: '$1'
    - regex: '(Nexus (?:6P?))'
      device: 'phablet'
      model: '$1'
    - regex: '(Nexus (?:7|9|10))'
      device: 'tablet'
      model: '$1'
    - regex: 'CrKey[^a-z0-9]'
      model: 'Chromecast'
      device: 'tv'
    - regex: 'GoogleTV'
      device: 'tv'
      model: 'GoogleTV'

# Hasee
Hasee:
  regex: 'Hasee'
  device: 'smartphone'
  models:
    - regex: 'Hasee ([^;/]+) Build'
      model: '$1'
    - regex: 'Hasee ([^;/)]+)[);/ ]'
      model: '$1'

# Hisense
Hisense:
  regex: '(?:HS-)?Hisense ([^;/]+) Build|Hisense [^);/]+|HS-(?:U|EG?|I|T|X)[0-9]+[a-z0-9\-]*|E270BSA|M470BS[AE]|E2281'
  device: 'smartphone'
  models:
    # explicit tablet models
    - regex: 'E270BSA'
      device: 'tablet'
      model: 'Sero 7'
    - regex: 'M470BS[AE]'
      device: 'tablet'
      model: 'Sero 7 Pro'
    - regex: 'E2281'
      device: 'tablet'
      model: 'Sero 8'

    - regex: '(HS-(?:U|EG?|I|T|X)[0-9]+[a-z0-9\-]*)'
      model: '$1'
    - regex: '(?:HS-)?Hisense ([^;/]+) Build'
      model: '$1'
    - regex: 'Hisense ([^);/]+)'
      model: '$1'

# Hi-Level
Hi-Level:
  regex: 'HLV-T([a-z0-9]+)'
  device: 'tablet'
  model: 'HLV-T$1'

# Hosin
Hosin:
  regex: 'HOSIN[ _-]'
  device: 'smartphone'
  models:
    - regex: 'HOSIN[ _-]([^;/]+) Build'
      model: '$1'
    - regex: 'HOSIN[ _-]([^;/]+)[;/)]'
      model: '$1'

# Huawei
Huawei:
  regex: '(HW-)?(?:Huawei|Ideos|Honor[ _]|(?:H60-L(?:01|02|03|04|11|12)|H30-(?:C00|L01M?|L02|U10|T00|T10)|G621-TL00M?|PLK-(?:AL10|CL00|TL00|TL01H?|UL00|L01)|SCL-(?:AL00|CL00|TL00H?|L01)|CH(?:E2?|M)-[CUT]L00[HM]?|CHE1-CL[12]0|CHE2-L11|CHM-U01|KIW-L21|U(?:8230|8500|8661|8665|8667|8800|8818|8860|9200|9508)|NEM-L21)[);/ ])'
  device: 'smartphone'
  models:
    - regex: 'U(8230|8661|8667)[);/ ]'
      model: 'U$1'
    - regex: 'U8500[);/ ]'
      model: 'Ideos X2'
    - regex: 'U8510[);/ ]'
      model: 'Ideos X3'
    - regex: 'U8665[);/ ]'
      model: 'Fusion 2'
    - regex: 'U8800[);/ ]'
      model: 'Ideos X5'
    - regex: 'U8818[);/ ]'
      model: 'Ascend G300'
    - regex: 'U8860[);/ ]'
      model: 'Honor'
    - regex: 'U9200[);/ ]'
      model: 'Ascend P1'
    - regex: 'U9500[);/ ]'
      model: 'Ascend D1'
    - regex: 'U9508[);/ ]'
      model: 'Honor 2'
    - regex: 'CHE2?-[UT]L00[HM]?|CHE1-CL[12]0|CHE2-L11'
      model: 'Honor 4X'
    - regex: 'CHM-[CUT]L00[HM]?'
      model: 'Honor Play 4C'
    - regex: '(?:Honor_|HW-)?G621-TL00M?[);/ ]'
      model: 'G621'
    - regex: '(?:Honor_|HW-)?H30-(?:C00|L01M?|L02|U10|T00|T10)(?:_TD)?[);/ ]'
      model: 'Honor 3C'
    - regex: '(?:Honor_|HW-)?SCL-(?:AL00|CL00|TL00H?)(?:_TD)?[);/ ]'
      model: 'Honor 4A'
    - regex: '(?:Honor_|HW-)?KIW-L21(?:_TD)?[);/ ]'
      model: 'Honor 5X'
    - regex: '(?:Honor_|HW-)?CHM-U01(?:_TD)?[);/ ]'
      model: 'Honor 4C'
    - regex: '(?:Honor_|HW-)?H60-L(?:01|02|03|04|11|12)(?:_TD)?[);/ ]'
      model: 'Honor 6'
    - regex: '(?:Honor_|HW-)?SCL-L01(?:_TD)?[);/ ]'
      model: 'Honor Y6'
    - regex: '(?:Honor_|HW-)?PLK-(?:AL10|CL00|TL00|TL01H?|UL00|L01)[);/ ]'
      model: 'Honor 7'
    - regex: '(?:Honor_|HW-)?NEM-L21[);/ ]'
      model: 'Honor 7 Lite'
    - regex: 'T1-A21w'
      device: 'tablet'
      model: 'Honor Tablet Note'
    - regex: 'T1-A21L'
      device: 'tablet'
      model: 'MediaPad T1 10'
    - regex: 'HUAWEI MT([0-9]+)'
      device: 'phablet'
      model: 'Ascend Mate $1'
    - regex: 'Huawei; ([a-z0-9 \-]+)'
      model: '$1'

# Hyundai
Hyundai:
  regex: 'Hyundai'
  device: 'tablet'
  models:
    - regex: 'Hyundai ([^;/]+) Build'
      model: '$1'

# iNew
iNew:
  regex: 'iNew|(?:V7A|V3 Plus|V3-?E|V3C)(?: Build|[;/\)])'
  device: 'smartphone'
  models:
    - regex: 'V3C(?: Build|[;/\)])'
      model: 'V3C'
    - regex: 'V3-?E(?: Build|[;/\)])'
      model: 'V3-E'
    - regex: 'V3 Plus(?: Build|[;/\)])'
      model: 'V3 Plus'
    - regex: 'V7A(?: Build|[;/\)])'
      model: 'V7A'
    - regex: 'iNew[ -_]([^;/]+) Build'
      model: '$1'

# iOcean
iOcean:
  regex: 'iOCEAN'
  device: 'smartphone'
  models:
    - regex: 'iOCEAN[ _\-]?([^/;]+) Build'
      model: '$1'
    - regex: 'iOCEAN[ _\-]?([^);/ ]+)'
      model: '$1'

# iTel
iTel:
  regex: 'itel|iNote'
  device: 'smartphone'
  models:
    - regex: 'iNote ([^/;]*)Build'
      model: 'iNote $1'
    - regex: 'iNote_([a-z0-9\-_]+)'
      model: 'iNote $1'
    - regex: 'iTel ([^/;]*)Build'
      model: '$1'
    - regex: 'iTel_([a-z0-9\-_]*)'
      model: '$1'



# lenovo
Lenovo:
  regex: '(?:LNV-)?Lenovo|IdeaTab|IdeaPad|Thinkpad|Yoga Tablet|Tab2A[0-9]-[0-9]{2}[a-z]?|YT3-X50L'
  device: 'smartphone'
  models:
    - regex: 'Lenovo ?G780'
      model: 'G780'
      device: 'desktop'
    - regex: 'Lenovo ?A3500-FL'
      model: 'IdeaTab A7-40'
      device: 'tablet'
    - regex: 'Lenovo ?A3500-(H|HV|F)'
      model: 'IdeaTab A7-50'
      device: 'tablet'
    - regex: 'Lenovo ?A5500-[HF]'
      model: 'IdeaTab A8-50'
      device: 'tablet'
    - regex: 'Lenovo ?A7600-[HF]'
      model: 'IdeaTab A10-70'
      device: 'tablet'
    - regex: 'TB2-X30[FL]'
      model: 'Tab 2 A10-30'
      device: 'tablet'
    - regex: 'YT3-X50[FL]'
      model: 'Yoga Tab 3'
      device: 'tablet'
    - regex: 'TB3-710[IF]'
      model: 'TAB3 7 Essential'
      device: 'tablet'
    - regex: 'Lenovo ?B8000(-[FH])?'
      model: 'Yoga Tablet 10'
      device: 'tablet'
    - regex: 'Lenovo ?B6000(-[FH])?'
      model: 'Yoga Tablet 8'
      device: 'tablet'
    - regex: 'YT3-X90L'
      model: 'Yoga 3 Pro'
      device: 'tablet'
    - regex: 'YT3-850[FL]'
      model: 'Yoga Tab 3 8'
      device: 'tablet'
    - regex: 'Lenovo TAB ?([^/;]*) Build'
      model: 'TAB $1'
      device: 'tablet'
    - regex: 'Lenovo ?A3300-(?:GV|H)'
      model: 'TAB 2 A7-30'
      device: 'tablet'
    - regex: 'Tab2A([0-9]-[0-9]{2}[a-z]?)'
      model: 'TAB 2 A$1'
      device: 'tablet'
    - regex: 'Yoga Tablet([^;/]+) Build'
      model: 'Yoga Tablet$1'
      device: 'tablet'
    - regex: 'Lenovo ([^/;]*) Build'
      model: '$1'
    - regex: '(?:LNV-|Lenovo-)?Lenovo[ \-_]?([a-z0-9_+\-]+)'
      model: '$1'


# lg
LG:
  regex: 'LG|portalmmm/2\.0 (?:KE|KG|KP|L3)|(?:VX[0-9]+|L-0[12]D|L-07C|P713)[);/ ]|NetCast'
  device: 'smartphone'
  models:
    - regex: 'P713'
      model: 'Optimus L7II'
    - regex: 'L-01D'
      model: 'Optimus LTE L-01D'
    - regex: 'L-02D'
      model: 'PRADA phone L-02D'
    - regex: 'L-07C'
      model: 'Optimus Bright L-07C'

    - regex: 'LG-V490'
      model: 'G Pad 8.0'
      device: 'tablet'
    - regex: 'LG-V500'
      model: 'G Pad 8.3'
      device: 'tablet'
    - regex: 'LG-V700'
      model: 'G Pad 10.1'
      device: 'tablet'
    - regex: 'LG-V935'
      model: 'G Pad II 10.1'
      device: 'tablet'

    - regex: 'webOS.TV'
      device: 'tv'
      model: 'WebOS TV'


# Meizu
Meizu:
  regex: '(M04[05]|M35[1356]|MX[ -]?[234](?: Pro)?|(?:MZ-)?m[12] note|(?:MZ-)?M57[18]C)[);/ ]'
  device: 'smartphone'
  models:
    - regex: '(?:MZ-)?M571C'
      device: 'phablet'
      model: 'M2 Note'
    - regex: '(?:MZ-)?m(1|2) note[);/ ]'
      device: 'phablet'
      model: 'M$1 Note'
    - regex: '(?:MZ-)?M578C'
      model: 'M2'
    - regex: '(M04[05]|MX[ -]?2)[);/ ]'
      model: 'MX2'
    - regex: '(M35[1356]|MX[ -]?3)[);/ ]'
      model: 'MX3'
    - regex: 'MX[ -]?4 Pro[);/ ]'
      model: 'MX4 Pro'
    - regex: 'MX[ -]?4[);/ ]'
      model: 'MX4'

# Memup
Memup:
  regex: 'SlidePad ?([^;/]*) Build|SPNG?[0-9]{2,4}[a-z]{0,2}[ ;/)]|SP704CE?'
  device: 'tablet'
  models:
    - regex: 'SlidePad ?([^;/]*) Build'
      model: 'SlidePad $1'
    - regex: 'SPNG([0-9]{2,4}[a-z]{0,2})[ ;/)]'
      model: 'SlidePad NG$1'
    - regex: 'SP704(CE?)'
      model: 'SlidePad 704$1'

# Mecer
Mecer:
  regex: '(M785|800P3[12]C|101P51C|X1010)[);/ ]'
  device: 'tablet'
  models:
    - regex: 'M785[);/ ]'
      model: 'Xpress Smartlife M785'
    - regex: 'X1010[);/ ]'
      model: 'X1010'
    - regex: '800P31C[);/ ]'
      model: 'Xpress Smartlife 800P31C'
    - regex: '800P32C[);/ ]'
      model: 'Xpress Smartlife 800P32C'
    - regex: '101P51C[);/ ]'
      model: 'Xpress Smartlife 101P51C'

# Modecom
Modecom:
  regex: 'Modecom|Free(?:Way )?Tab|xino z[\d]+ x[\d]+'
  device: 'tablet'
  models:
    - regex: 'xino Z([\d]+) X([\d]+)'
      model: 'Xino Z$1 X$2'
      device: 'smartphone'

    - regex: 'FreeTab[ _\-]?([^/;]+)? Build'
      model: 'FreeTab $1'
    - regex: 'FreeTab[ _\-]?((?!Build)[^);/ ]+)?'
      model: 'FreeTab $1'
    - regex: 'FreeWay Tab[ _\-]?([^/;]+) Build'
      model: 'FreeWay Tab $1'
    - regex: 'FreeWay Tab[ _\-]?((?!Build)[^);/ ]+)'
      model: 'FreeWay Tab $1'

# Mofut
Mofut:
  regex: 'Mofut'
  device: 'smartphone'
  models:
    - regex: 'Mofut[ _\-]?([^/;]+) Build'
      model: '$1'
    - regex: 'Mofut[ _\-]?((?!Build)[^);/ ]+)'
      model: '$1'


# myphone
MyPhone:
  regex: '(?:MyPhone|MyPad|MyTab)[ _][^;/]+ Build|Cube_LTE|myTab10II'
  device: 'smartphone'
  models:
    - regex: 'MyPad[ _]([^;/]+) Build'
      model: 'MyPad $1'
      device: 'tablet'
    - regex: 'MyTab[ _]([^;/]+) Build'
      model: 'MyTab $1'
      device: 'tablet'
    - regex: 'myTab10II'
      model: 'MyTab 10 II'
      device: 'tablet'
    - regex: 'Cube_LTE'
      model: 'Cube LTE'
    - regex: 'MyPhone[ _]([^;/]+) Build'
      model: '$1'

# oppo
OPPO:
  regex: '(?:OB-)?OPPO[ _]?([a-z0-9]+)|N1T|(?:X90[07][067]|U707T?|X909T?|R(?:10[01]1|2001|201[07]|6007|7005|7007|80[13579]|81[13579]|82[01379]|83[013]|800[067]|8015|810[679]|811[13]|820[057])[KLSTW]?)|N520[79]|N5117[);/ ]'
  device: 'smartphone'
  models:
    - regex: '(?:OPPO[ _]?)?U707T?[);/ ]'
      model: 'Find Way S'
    - regex: '(?:OPPO[ _]?)?X909T?[);/ ]'
      model: 'Find 5'
    - regex: '(?:OPPO[ _]?)?X907[067][);/ ]'
      model: 'Find 7'
    - regex: '(?:OPPO[ _]?)?X900[067][);/ ]'
      model: 'Find 7a'
    - regex: '(?:OPPO[ _]?)?R8006[);/ ]'
      model: 'R1L'
    - regex: '(?:OPPO[ _]?)?R800[07][);/ ]'
      model: 'R1S'
    - regex: '(?:OPPO[ _]?)?R8015[);/ ]'
      model: 'Find Guitar'
    - regex: '(?:OPPO[ _]?)?R810[679][);/ ]'
      model: 'R5'
    - regex: '(?:OPPO[ _]?)?R8111[);/ ]'
      model: 'Find Melody'
    - regex: '(?:OPPO[ _]?)?R8113[);/ ]'
      model: 'Piano'
    - regex: '(?:OPPO[ _]?)?R815[TW]?[);/ ]'
      model: 'Find Clover'
    - regex: '(?:OPPO[ _]?)?R821T?[);/ ]'
      model: 'Find Muse'
    - regex: '(?:OPPO[ _]?)?R827T?[);/ ]'
      model: 'Find 5 Mini'
    - regex: '(?:OPPO[ _]?)?R831[SL][);/ ]'
      model: 'Neo 5'
    - regex: '(?:OPPO[ _]?)?R831K[);/ ]'
      model: 'Neo 3'
    - regex: '(?:OPPO[ _]?)?R831T?[);/ ]'
      model: 'Neo'
    - regex: '(?:OPPO[ _]?)?N520[79][);/ ]'
      model: 'N3'
    - regex: '(?:OPPO[ _]?)?N5117[);/ ]'
      model: 'N1 Mini'

    - regex: 'N1T?[);/ ]'
      model: 'N1T'
      device: 'phablet'

    - regex: 'R([0-9]{3,4}[KSTW]?)[);/ ]' # valid model numbers are filtered in main regex
      model: 'R$1'

    - regex: '(?:OB-)?OPPO[ _]?([a-z0-9]+)'
      model: '$1'


# orange
Orange:
  regex: 'SPV[ \-]?([a-z0-9]+)|Orange ([^/;]+) Build|SC/IHD92|FunTab ([^/;]+) Build'
  device: 'smartphone'
  models:
    - regex: 'SC/IHD92'
      model: 'Livebox Play'
      device: 'tv' # set top box
    - regex: 'Sego'
      model: 'Sego'
      device: 'tablet'
    - regex: 'FunTab ([^/;]+) Build'
      model: 'FunTab $1'
      device: 'tablet'
    - regex: 'Orange ([^/;]+) Build'
      model: '$1'
    - regex: 'SPV[ \-]?([a-z0-9]+)'
      model: 'SPV $1'

# Ouki
Ouki:
  regex: 'OUKI|OK[AU][0-9]+[a-z]* Build'
  device: 'smartphone'
  models:
    - regex: 'OUKI[ _-]?([^;/]+) Build'
      model: '$1'
    - regex: '([^;/)]+) Build/OUKI'
      model: '$1'
    - regex: 'OUKI[ _-]?([^;/)]+)[;/)]'
      model: '$1'
    - regex: '(OK[AU][0-9]+[a-z]*) Build'
      model: '$1'

# Overmax
Overmax:
  regex: 'OV-[a-z]+(?:[^;(/]*)[();/ ]|Qualcore 1010'
  device: 'tablet'
  models:
    - regex: 'OV-V10'
      model: 'Vertis Yard'
      device: 'smartphone'
    - regex: 'OV-Vertis[ _-]([^;/]+) Build'
      model: 'Vertis $1'
      device: 'smartphone'

    - regex: 'Qualcore 1010'
      model: 'Qualcore 1010'
      device: 'tablet'

    - regex: '(OV-[a-z]+(?:[^;(/]*))(?<!Build)[();/ ]'
      model: '$1'

'

# panasonic
Panasonic:
  regex: 'Panasonic|PANATV[0-9]+|Viera/|P902i[);/ ]'
  device: 'smartphone'
  models:
    - regex: 'P902i[);/ ]'
      device: 'feature phone'
      model: 'P902i'
    - regex: 'Panasonic MIL DLNA'
      device: 'tv'
      model: 'Viera Cast'
    - regex: 'PANATV[0-9]+|Viera/'
      device: 'tv'
      model: 'Smart TV'
    - regex: 'Panasonic[ \-]?([a-z0-9]+)'
      model: '$1'
    - regex: 'portalmmm/2.0 (P[a-z0-9]+)'
      model: '$1'

# Pentagram
Pentagram:
  regex: 'Pentagram|Quadra|Monster X5'
  device: 'tablet'
  models:
    - regex: '(?:PENTAGRAM[_ ])?EON[_ ]PRIX'
      model: 'Eon Prix'
    - regex: 'Quadra 7( UltraSlim)?'
      model: 'Quadra 7 UltraSlim'
    - regex: 'Monster X5?'
      model: 'Monster X5'
      device: 'smartphone'
    - regex: 'Quadra ?([^);/]*) Build'
      model: 'Quadra $1'
    - regex: 'Pentagram ?TAB ?([^);/]*) Build'
      model: 'Tab $1'
    - regex: 'Pentagram ?([^);/]*) Build'
      model: '$1'
      device: 'smartphone'

# philips
Philips:
  regex: 'Philips|AND1E[);/ ]|NETTV/|PI3210G'
  device: 'smartphone'
  models:
    - regex: 'AND1E(?: TV)?[);/ ]'
      model: 'Android TV'
      device: 'tv'
    - regex: '(PI3210G)'
      model: '$1'
      device: 'tablet'
    - regex: 'Philips, BDP([0-9]{4})'
      model: 'Blu-ray Player (BDP$1)'
      device: 'tv'
    - regex: '(NETTV/[0-9\.]{5})'
      model: 'NetTV Series'
      device: 'tv'
    - regex: 'Philips[ _-]?([a-z0-9\-@]+)'
      model: '$1'


# Pioneer
Pioneer:
  regex: 'Pioneer|.*; R1 Build'
  device: 'smartphone'
  models:
    - regex: '.*; R1 Build'
      model: 'R1'
      device: 'tablet'
    - regex: 'Pioneer[ _-]?([^;/]+) Build'
      model: '$1'
    - regex: 'Pioneer[ _-]?([^;/)]+)[;/)]'
      model: '$1'

# Samsung
Samsung:
  regex: 'SAMSUNG|Maple |SC-(?:02[CH]|04E|01F)|N[57]100|N5110|N9100|S(?:CH|GH|PH|EC|AM|HV|HW|M)-|SMART-TV|GT-|Galaxy|(?:portalmmm|o2imode)/2\.0 [SZ]|sam[rua]|vollo Vi86[);/ ]|(?:OTV-)?SMT-E5015|ISW11SC'
  device: 'smartphone'
  models:
    # explicit tv models
    - regex: '(?:OTV-)?SMT-E5015'
      device: 'tv'
      model: 'SMT-E5015' # set top box
    - regex: 'Maple '
      device: 'tv'
      model: ''

    # explicit tablet models
    - regex: '(?:SAMSUNG-)?(?:GT-)?N5100'
      device: 'tablet'
      model: 'GALAXY Note 8.0"'
    - regex: '(?:SAMSUNG-)?(?:GT-)?N5110'
      device: 'tablet'
      model: 'GALAXY Note 8.0" WiFi'
    - regex: '(?:SAMSUNG-)?GT-N5120'
      device: 'tablet'
      model: 'GALAXY Note 8.0" LTE'
    - regex: '(?:SAMSUNG-)?GT-N8000'
      device: 'tablet'
      model: 'GALAXY Note 10.1"'
    - regex: '(?:SAMSUNG-)?GT-N8010'
      device: 'tablet'
      model: 'GALAXY Note 10.1" WiFi'
    - regex: '(?:SAMSUNG-)?GT-N8020'
      device: 'tablet'
      model: 'GALAXY Note 10.1" LTE'
    - regex: '(?:SAMSUNG-)?GT-P1000M?|SCH-I800'
      device: 'tablet'
      model: 'GALAXY Tab'
    - regex: '(?:SAMSUNG-)?GT-P5100|SCH-I915'
    - regex: '(?:SAMSUNG-)?SM-P901'
      device: 'tablet'
      model: 'GALAXY NotePRO 12.2"'
    - regex: '(?:SAMSUNG-)?SM-T21(?:1|7[AS])'
    - regex: '(?:SAMSUNG-)?SM-T335'
      device: 'tablet'
      model: 'GALAXY Tab 8.0" LTE'
    - regex: '(?:SAMSUNG-)?SM-T535'
      device: 'tablet'
      model: 'GALAXY Tab 4 10.1" LTE'
    - regex: '(?:SAMSUNG-)?SM-T700'
      device: 'tablet'
      model: 'GALAXY Tab S 8.4" WiFi'
    - regex: '(?:SAMSUNG-)?SM-T705'
      device: 'tablet'
      model: 'GALAXY Tab S 8.4" LTE'
    - regex: '(?:SAMSUNG-)?SM-T800'
      device: 'tablet'
      model: 'GALAXY Tab S 10.5" WiFi'
    - regex: '(?:SAMSUNG-)?SM-T805'
      device: 'tablet'
      model: 'GALAXY Tab S 10.5" LTE'
    - regex: '(?:SAMSUNG-)?SM-T815'
      device: 'tablet'
      model: 'GALAXY Tab S2'
    - regex: '(?:SAMSUNG-)?GT-B5330'
      model: 'GALAXY Chat'
    - regex: '(?:SAMSUNG-)?GT-B5510'
      model: 'GALAXY Y Pro'
    - regex: '(?:SAMSUNG-)?GT-B5512'
      model: 'GALAXY Y Pro Duos'
    - regex: '(?:SAMSUNG-)?GT-B7510'
      model: 'GALAXY Pro'
    - regex: '(?:SAMSUNG-)?GT-I5700'
      model: 'GALAXY Spica'
    - regex: '(?:SAMSUNG-)?GT-I5801'
      model: 'GALAXY Apollo'
    - regex: '(?:SAMSUNG-)?GT-I5800'
      model: 'GALAXY 3'
    - regex: '(?:SAMSUNG-)?GT-I8000'
      model: 'Omnia II'
    - regex: '(?:SAMSUNG-)?GT-I8150'
      model: 'GALAXY W'
    - regex: '(?:SAMSUNG-)?GT-I8160'
      model: 'GALAXY Ace 2'
    - regex: '(?:SAMSUNG-)?GT-I8190'
      model: 'GALAXY S III mini'
    - regex: '(?:SAMSUNG-)?GT-I8200'
      model: 'GALAXY S III mini Value Edition'
    - regex: '(?:SAMSUNG-)?GT-I826[02]'
      model: 'GALAXY Core'
    - regex: '(?:SAMSUNG-)?GT-I8320'
      model: 'H1'
    - regex: '(?:SAMSUNG-)?GT-I85[23]0'
      model: 'GALAXY Beam'
    - regex: '(?:SAMSUNG-)?GT-I855[028]'
      model: 'GALAXY Win'
    - regex: '(?:SAMSUNG-)?GT-I8580'
      model: 'GALAXY Core Advance'
    - regex: '(?:SAMSUNG-)?GT-I8730'
      model: 'GALAXY Express'
    - regex: '(?:SAMSUNG-)?GT-I90(?:00|08|18|88)'
      model: 'GALAXY S'
    - regex: '(?:SAMSUNG-)?GT-I9001'
      model: 'GALAXY S Plus'
    - regex: '(?:SAMSUNG-)?GT-I9003'
      model: 'GALAXY SL'
    - regex: '(?:SAMSUNG-)?GT-I9010'
      model: 'GALAXY S Giorgio Armani'
    - regex: '(?:SAMSUNG-)?GT-I9070'
      model: 'GALAXY S Advance'
    - regex: '(?:SAMSUNG-)?GT-I910[08]'
      model: 'GALAXY S II'
    - regex: '(?:SAMSUNG-)?ISW11SC'
      model: 'GALAXY S II WiMAX'
    - regex: '(?:SAMSUNG-)?GT-I9103'
      model: 'GALAXY R'
    - regex: '(?:SAMSUNG-)?GT-I9105'
      model: 'GALAXY S II Plus'
    - regex: '(?:SAMSUNG-)?(?:GT-I919[05]|SCH-I435)'
      model: 'GALAXY S4 mini'
    - regex: '(?:SAMSUNG-)?GT-I9295'
      model: 'GALAXY S4 ACTIVE'
    - regex: '(?:SAMSUNG-)?(?:GT-I9300|SCH-I535|SCH-L710)'
      model: 'GALAXY S III'
    - regex: '(?:SAMSUNG-)?(?:GT-I9305|SCH-R530)'
      model: 'GALAXY S III LTE'
    - regex: '(?:SAMSUNG-)?(?:GT-I9505|SCH-I545|SCH-I959|SCH-R970|GALAXY-S4)'
      model: 'GALAXY S4'
    - regex: '(?:SAMSUNG-)?GT-I9506'
      model: 'GALAXY S4 with LTE+'
    - regex: '(?:SAMSUNG-)?GT-S5280'
      model: 'GALAXY STAR'
    - regex: '(?:SAMSUNG-)?GT-S5301'
      model: 'GALAXY POCKET Plus'
    - regex: '(?:SAMSUNG-)?GT-S5310'
      model: 'GALAXY POCKET Neo'
    - regex: '(?:SAMSUNG-)?GT-S5360'
      model: 'GALAXY Y Hello Kitty'
    - regex: '(?:SAMSUNG-)?GT-S6310'
      model: 'GALAXY Young'
    - regex: '(?:SAMSUNG-)?GT-S6312'
      model: 'GALAXY Young DUOS'
    - regex: '(?:SAMSUNG-)?GT-S6790'
      model: 'GALAXY FAME Lite with NFC'
    - regex: '(?:SAMSUNG-)?GT-S6810'
      model: 'GALAXY FAME'
    - regex: '(?:SAMSUNG-)?GT-S7275'
      model: 'GALAXY ACE 3'
    - regex: '(?:SAMSUNG-)?GT-S7390'
      model: 'GALAXY Trend Lite'
    - regex: '(?:SAMSUNG-)?GT-S7500'
      model: 'GALAXY ACE Plus'
    - regex: '(?:SAMSUNG-)?(?:GT-S7560|SCH-I699)'
      model: 'GALAXY Trend'
    - regex: '(?:SAMSUNG-)?(?:GT-S7562|SCH-I919)'
      model: 'GALAXY S DUOS'
    - regex: '(?:SAMSUNG-)?GT-S7580'
      model: 'GALAXY Trend Plus'
    - regex: '(?:SAMSUNG-)?GT-S7582'
      model: 'GALAXY DUOS 2'
    - regex: '(?:SAMSUNG-)?GT-S7710'
      model: 'GALAXY Xcover 2'
    - regex: '(?:SAMSUNG-)?GT-S8500'
      model: 'Wave'
    - regex: '(?:SAMSUNG-)?GT-S8530'
      model: 'Wave II'
    - regex: '(?:SAMSUNG-)?GT-S8600'
      model: 'Wave 3'
    - regex: '(?:SAMSUNG-)?GT-S5380'
      model: 'Wave Y'
    - regex: '(?:SAMSUNG-)?GT-S7250'
      model: 'Wave M'
    - regex: '(?:SAMSUNG-)?GT-S5250'
      model: 'Wave 525'
    - regex: '(?:SAMSUNG-)?GT-S5330'
      model: 'Wave 533'
    - regex: '(?:SAMSUNG-)?GT-S5780'
      model: 'Wave 578'
    - regex: '(?:SAMSUNG-)?GT-S7230'
      model: 'Wave 723'
    - regex: '(?:SAMSUNG-)?SM-G800'
      model: 'GALAXY S5 mini'
    - regex: '(?:SAMSUNG-)?SM-G900|GALAXY-S5'
      model: 'GALAXY S5'
    - regex: '(?:SAMSUNG-)?SM-G903F'
      model: 'GALAXY S5 Neo'
    - regex: '(?:SAMSUNG-)?SM-G920F'
      model: 'GALAXY S6'
    - regex: '(?:SAMSUNG-)?SM-G935F|SC-02H'
      model: 'GALAXY S7 edge'
    - regex: '(?:SAMSUNG-)?SCH-I200'
      model: 'GALAXY Stellar'
    - regex: '(?:SAMSUNG-)?SCH-I829'
      model: 'GALAXY Style Duos'
    - regex: '(?:SAMSUNG-)?(?:SGH-S730|SCH-R740)'
      model: 'GALAXY Discover'
    - regex: '(?:SAMSUNG-)?SCH-S738'
      model: 'GALAXY Centura'
    - regex: 'vollo Vi86[);/ ]'
      model: 'Vollo Vi86'

    # explicit phablet models
    - regex: '(?:SAMSUNG-)?GT-I9060'
      model: 'GALAXY Grand Neo'
      device: 'phablet'
    - regex: '(?:SAMSUNG-)?GT-I9063'
      model: 'GALAXY Grand Neo Duos'
      device: 'phablet'
    - regex: '(?:SAMSUNG-)?GT-I9(?:080|128)'
      model: 'GALAXY Grand'
      device: 'phablet'
    - regex: '(?:SAMSUNG-)?GT-I9168'
      model: 'GALAXY Grand Neo+'
      device: 'phablet'
    - regex: '(?:SAMSUNG-)?GT-I9082'
      model: 'GALAXY Grand Duos'
      device: 'phablet'
    - regex: '(?:SAMSUNG-)?(?:(?:GT-)?N7100|SCH-I605|SCH-N719|SCH-R950|SPH-L900)'
      model: 'GALAXY Note II'
      device: 'phablet'
    - regex: '(?:SAMSUNG-)?GT-N7105'
      model: 'GALAXY Note II LTE'
      device: 'phablet'
    - regex: '(?:SAMSUNG-)?SM-G7105'
      model: 'GALAXY Grand 2'
      device: 'phablet'
    - regex: '(?:SAMSUNG-)?SM-N7502'
      model: 'GALAXY Note 3 Neo Duos'
      device: 'phablet'
    - regex: '(?:SAMSUNG-)?SM-N750[L50]?'
      model: 'GALAXY Note 3 Neo'
      device: 'phablet'
    - regex: '(?:SAMSUNG-)?SM-N9002'
      model: 'GALAXY Note 3 Duos'
      device: 'phablet'
    - regex: '(?:SAMSUNG-)?SM-N900(?:[05689][VQ]?|[AKLPSTV]|W8)?'
      model: 'GALAXY Note 3'
      device: 'phablet'
    - regex: '(?:SAMSUNG-)?SM-N920[0CIST]'
      model: 'GALAXY Note 5'
      device: 'phablet'
    - regex: '(?:SAMSUNG-)?SM-N9208'
      model: 'GALAXY Note 5 Duos'
      device: 'phablet'
    - regex: '(?:SAMSUNG-)?GT-I915[028]'
      model: 'GALAXY Mega 5.8'
      device: 'phablet'
    - regex: '(?:SAMSUNG-)?GT-I920[05]'
      model: 'GALAXY Mega 6.3'
      device: 'phablet'
    - regex: '(?:SAMSUNG-)?SM-N930F'
      model: 'GALAXY Note 7'
      device: 'phablet'

    # explicit feature phones
    - regex: '(?:SAMSUNG-)?GT-E2152'
      model: 'E2152'
      device: 'feature phone'

    # general detections
    - regex: 'SMART-TV'
      device: 'tv'
      model: 'Smart TV'
    - regex: 'Galaxy ([^/;]+) Build'
      model: 'GALAXY $1'
    - regex: 'Galaxy ([a-z0-9]+)'
      model: 'GALAXY $1'

# Sencor
Sencor:
  regex: 'Sencor|ELEMENT[ _]?(?:7|8|9\.7|10[ _]1)(?:[ _]?V[23])?[);/ ]|ELEMENT[ _]?(?:P[0-9]+)[);/ ]'
  device: 'tablet'
  models:
    # explicit tablet models
    - regex: '(?:SENCOR[ _])?ELEMENT[ _]?7[ _]?V3'
      model: 'Element 7 V3'
    - regex: '(?:SENCOR[ _])?ELEMENT[ _]?7[ _]?V2[ _]BASIC'
      model: 'Element 7 V2 Basic'
    - regex: '(?:SENCOR[ _])?ELEMENT[ _]?7[ _]?V2'
      model: 'Element 7 V2'
    - regex: '(?:SENCOR[ _])?ELEMENT[ _]8[ _]?V3'
      model: 'Element 8 V3'
    - regex: '(?:SENCOR[ _])?ELEMENT[ _]8[ _]?V2'
      model: 'Element 8 V2'
    - regex: '(?:SENCOR[ _])?ELEMENT8'
      model: 'Element 8'
    - regex: '(?:SENCOR[ _])?ELEMENT[ _]9\.7[ _]?V3'
      model: 'Element 9.7 V3'
    - regex: '(?:SENCOR[ _])?ELEMENT[ _]9\.7[ _]?V2'
      model: 'Element 9.7 V2'
    - regex: '(?:SENCOR[ _])?ELEMENT[ _]9\.7'
      model: 'Element 9.7'
    - regex: '(?:SENCOR[ _])?ELEMENT10[ _]1'
      model: 'Element 10.1'

    - regex: '(?:SENCOR[ _])?ELEMENT[ _]?P([0-9]+)'
      model: 'Element P$1'
      device: 'smartphone'

    - regex: 'Sencor[ _]([^;/]+) Build'
      model: '$1'

# Skyworth
Skyworth:
  regex: 'Sky_?worth'
  device: 'tv'
  models:
    - regex: 'Sky_?worth ([^;/]+) Build'
      model: '$1'


# Stonex
Stonex:
  regex: 'STX[ -]([^;/]+)'
  device: 'smartphone'
  models:
    - regex: 'STX[ -]([^;/]+) Build'
      model: '$1'
    - regex: 'STX[ -]([a-z0-9_-]+)'
      model: '$1'

# Ployer
Ployer:
  regex: 'MOMO([0-9]|miniS)'
  device: 'tablet'
  models:
    - regex: 'MOMOminiS'
      model: 'MOMO mini S'
    - regex: 'MOMO([0-9][^);/]*) Build'
      model: 'MOMO $1'
    - regex: 'MOMO([0-9][^);/]*)[);/]'
      model: 'MOMO $1'

# Polaroid
Polaroid:
  regex: 'Polaroid|(?:PMID|MIDC)[0-9a-z]+[);/ ]|MID(?:1014|0714)|PRO[VG]?(?:[0-9]{3,}[a-z]*|[0-9]{2}[a-z])'
  device: 'tablet'
  models:
    # explicit smartphone models
    - regex: 'PRO4611(?:PR201)?'
      model: 'Pro4611'
      device: 'smartphone'
    - regex: 'PROV400'
      model: 'Agate'
      device: 'smartphone'
    - regex: 'PROV350'
      model: 'ProV350'
      device: 'smartphone'

    - regex: 'PRO([VG]?(?:[0-9]{3,}[a-z]*|[0-9]{2}[a-z]))'
      model: 'Pro$1'
      device: 'smartphone'
    - regex: '(MID(?:1014|0714))'
      model: '$1'
    - regex: '((?:PMID|MIDC)[0-9a-z]+)[);/ ]'
      model: '$1'
    - regex: 'Polaroid'
      model: ''


# Prestigio
Prestigio:
  regex: '(?:PMP|PAP|PMT|PSP)[0-9]+[a-z0-9_]+[);/ ]'
  device: 'tablet'
  models:
    - regex: 'PMT3277_3G'
      model: 'MultiPad Ranger 7.0 3G'
    - regex: 'PMT3287_3G'
      model: 'MultiPad Ranger 8.0 3G'

    - regex: '(PM[PT][0-9]+[a-z0-9_]+)[);/ ]'
      model: '$1'
    - regex: '((?:PAP|PSP)[0-9]+[a-z0-9_]+(?: DUO)?)[);/ ]'
      model: '$1'
      device: 'smartphone'


# QMobile
QMobile:
  regex: 'QMobile|QTab|Q-Smart'
  device: 'smartphone'
  models:
    - regex: 'QTab[ _-]([^;/]+) Build'
      model: '$1 Tab'
      device: 'tablet'
    - regex: 'QTab[ _-]([^;/)]+)[;/)]'
      model: '$1 Tab'
      device: 'tablet'
    - regex: '(?:QMobile|Q-Smart)[ _-]([^;/]+) Build'
      model: '$1'
    - regex: '(?:QMobile|Q-Smart)[ _-]([^;/)]+)[;/)]'
      model: '$1'


# Star
Star:
  regex: 'N(9[5678]00|8800|9000|9977)[);/ ]'
  device: 'smartphone'
  models:
    - regex: 'N9000'
      model: 'Note 3'

    - regex: 'N(9[5678]00|8800|9977)[);/ ]'
      model: 'N$1'

# Kindle
Amazon:
  regex: 'KF(?:OT|TT|JWI|JWA|SOWI|A[PRS]WI|THWI|SAW[IA])[);/ ]|Kindle|Silk/\d+\.\d+|Amazon (?:Tate|Jem)|AFT[BM]|SD4930UR'
  device: 'tablet'
  models:
    - regex: 'AFTB'
      model: 'Fire TV'
      device: 'tv'
    - regex: 'AFTM'
      model: 'Fire TV stick'
      device: 'tv'
    - regex: 'KFTT[);/ ]'
      model: 'Kindle Fire HD'
    - regex: 'KFJWI[);/ ]|Amazon Jem'
      model: 'Kindle Fire HD 8.9" WiFi'
    - regex: 'KFJWA[);/ ]'
      model: 'Kindle Fire HD 8.9" 4G'
    - regex: 'KFSOWI[);/ ]|Amazon Tate'
      model: 'Kindle Fire HD 7" WiFi'
    - regex: 'KFTHWI[);/ ]'
      model: 'Kindle Fire HDX 7" WiFi'
    - regex: 'KFTHWA[);/ ]'
      model: 'Kindle Fire HDX 7" 4G'
    - regex: 'KFAPWI[);/ ]'
      model: 'Kindle Fire HDX 8.9" WiFi'
    - regex: 'KFAPWA[);/ ]'
      model: 'Kindle Fire HDX 8.9" 4G'
    - regex: 'KFARWI[);/ ]'
      model: 'Fire HD 6'
    - regex: 'KFASWI[);/ ]'
      model: 'Fire HD 7'
    - regex: 'KFSAWI[);/ ]'
      model: 'Fire HDX 8.9'
    - regex: 'KFSAWA[);/ ]'
      model: 'Fire HDX 8.9 4G'
    - regex: 'SD4930UR'
      model: 'Fire Phone'
      device: 'smartphone'
    - regex: 'Kindle'
      model: 'Kindle'

# TB Touch
'TB Touch':
  regex: 'Ignis [89]'
  device: 'tablet'
  models:
    - regex: 'Ignis ([89])'
      model: 'Ignis $1'

# Tesco
Tesco:
  regex: 'Hudl ([^/;]+) Build|W032i-C3[);/ ]'
  device: 'tablet'
  models:
    - regex: 'Hudl ([^/;]+) Build'
      model: 'Hudl $1'
    - regex: 'W032i-C3[);/ ]'
      model: 'Op3n Dott'

# teXet
teXet:
  regex: '(NaviPad [^/;]*) Build'
  device: 'tablet'
  model: '$1'

# Telenor
Telenor:
  regex: 'Telenor'
  device: 'smartphone'
  models:
    - regex: 'Telenor[ _]([^;/]+) Build'
      model: '$1'
    - regex: 'Telenor[ _]([^a-z0-9_]+)\)'
      model: '$1'




# Vastking
Vastking:
  regex: 'M910A[);/ ]'
  device: 'tablet'
  models:
    - regex: 'M910A[);/ ]'
      model: 'M910A'

# ViewSonic
ViewSonic:
  regex: 'ViewSonic|VSD[0-9]+[);/ ]|ViewPad|ViewPhone'
  device: 'smart display'
  models:
    - regex: '(?:ViewSonic-)?V500[);/ ]'
      model: 'V500'
      device: 'smartphone'
    - regex: '(?:ViewSonic-)?ViewPhone ?([^;/]+) Build'
      model: 'ViewPhone $1'
      device: 'smartphone'
    - regex: '(VSD[0-9]+)[);/ ]'
      model: '$1'

# Vertu
Vertu:
  regex: 'Vertu[ ]?([a-z0-9]+)'
  device: 'feature phone'
  model: '$1'

# Vodafone
Vodafone:
  regex: 'Vodafone[ _-]|Smart ?Tab ?(?:III? ?)?(?:|4G|7|10)[);/ -]|VodafoneSmartChat'
  device: 'smartphone'
  models:
    - regex: 'Vodafone[ _]875[);/ ]'
      model: 'Smart Mini' # Alcatel
    - regex: 'Vodafone[ _]975N?[);/ ]'
      model: 'Smart 3' # Alcatel
    - regex: 'Vodafone[ _]785[);/ ]'
      model: 'Smart 4 Mini'
    - regex: 'Vodafone[ _]890N[);/ ]'
      model: 'Smart 4 Turbo' # Coolpad 3601U
    - regex: 'Vodafone[ _]985N[);/ ]'
      model: 'Smart 4 Power'
    - regex: 'VodafoneSmartChat'
      model: 'Smart Chat'

    # explicit table models
    - regex: 'Smart ?Tab ?3G'
      device: 'tablet'
      model: 'Smart Tab 3G'
    - regex: 'Smart ?Tab ?4G'
      device: 'tablet'
      model: 'Smart Tab 4G'  # Alcatel
    - regex: 'SmartTab7[);/ -]'
      model: 'Smart Tab 7' # ZTE
      device: 'tablet'
    - regex: 'SmartTab10[);/ -]'
      model: 'Smart Tab 10' # ZTE
      device: 'tablet'
    - regex: 'Smart ?Tab ?II ?7'
      model: 'Smart Tab II 7' # Lenovo
      device: 'tablet'
    - regex: 'Smart ?Tab ?II ?10'
      model: 'Smart Tab II 10' # Lenovo
      device: 'tablet'
    - regex: 'Smart ?Tab ?III ?7'
      model: 'Smart Tab III 7' # Lenovo
      device: 'tablet'
    - regex: 'Smart ?Tab ?III ?10'
      model: 'Smart Tab III 10' # Lenovo
      device: 'tablet'

    - regex: 'Vodafone[ _-]([^;/]+) Build'
      model: '$1'
    - regex: 'Vodafone[ _-]([a-z0-9_-]+)'
      model: '$1'

# Voto
Voto:
  regex: 'VOTO[ _\-]|VT8[89]8[;/) ]'
  device: 'smartphone'
  models:
    - regex: 'VOTO[ _\-]?([^/;]+) Build'
      model: '$1'
    - regex: 'VOTO[ _\-]?([^);/ ]+)'
      model: '$1'
    - regex: '(VT8[89]8)[;/) ]'
      model: '$1'

# Voxtel
Voxtel:
  regex: 'Voxtel_([a-z0-9]+)'
  device: 'feature phone'
  model: '$1'


# Wiko
Wiko:
  regex: '(?:WIKO-)?CINK_[a-z0-9_]+|(?:WIKO-)?HIGHWAY_[a-z0-9_]+|(?:WIKO-)?(?:Cink.*|Highway.*|Iggy|Stairway|Rainbow|Darkside|Darkmoon|Darkfull|Darknight|Sublim|Ozzy|JIMMY|Barry|Birdy|Bloom|Getaway|Goa|Kite|Lenny2?|Slide|Sunset|Wax|Ridge(?: Fab)?)(?: 4G)? Build'
  device: 'smartphone'
  models:
    - regex: '(?:WIKO-)?CINK_([a-z0-9_]+)'
      model: 'Cink $1'
    - regex: '(?:Wiko-)?Cink(.*) Build'
      model: 'Cink$1'
    - regex: '(?:WIKO-)?HIGHWAY_([a-z0-9_]+)'
      model: 'Highway $1'
    - regex: '(?:Wiko-)?Highway(.*) Build'
      model: 'Highway$1'
    - regex: '(?:WIKO-)?Iggy Build'
      model: 'Iggy'
    - regex: '(?:WIKO-)?Stairway Build'
      model: 'Stairway'
    - regex: '(?:WIKO-)?Ridge Build'
      model: 'Ridge'
    - regex: '(?:WIKO-)?Ridge Fab 4G Build'
      model: 'Ridge Fab 4G'
    - regex: '(?:WIKO-)?Ridge 4G Build'
      model: 'Ridge 4G'
    - regex: '(?:WIKO-)?Rainbow Build'
      model: 'Rainbow'
    - regex: '(?:WIKO-)?Rainbow 4G Build'
      model: 'Rainbow 4G'
    - regex: '(?:WIKO-)?Darkside Build'
      model: 'Darkside'
    - regex: '(?:WIKO-)?Darkmoon Build'
      model: 'Darkmoon'
    - regex: '(?:WIKO-)?Darkfull Build'
      model: 'Darkfull'
    - regex: '(?:WIKO-)?Darknight Build'
      model: 'Darknight'
    - regex: '(?:WIKO-)?Sublim Build'
      model: 'Sublim'
    - regex: '(?:WIKO-)?Ozzy Build'
      model: 'Ozzy'
    - regex: '(?:WIKO-)?Barry Build'
      model: 'Barry'
    - regex: '(?:WIKO-)?Birdy Build'
      model: 'Birdy'
    - regex: '(?:WIKO-)?Bloom Build'
      model: 'Bloom'
    - regex: '(?:WIKO-)?JIMMY Build'
      model: 'Jimmy'
    - regex: '(?:WIKO-)?Getaway Build'
      model: 'Getaway'
    - regex: '(?:WIKO-)?Goa Build'
      model: 'Goa'
    - regex: '(?:WIKO-)?Kite Build'
      model: 'Kite'
    - regex: '(?:WIKO-)?Lenny Build'
      model: 'Lenny'
    - regex: '(?:WIKO-)?Lenny[ -_]?2 Build'
      model: 'Lenny 2'
    - regex: '(?:WIKO-)?Slide Build'
      model: 'Slide'
    - regex: '(?:WIKO-)?Sunset Build'
      model: 'Sunset'
    - regex: '(?:WIKO-)?Wax Build'
      model: 'Wax'

# Wolder
Wolder:
  regex: 'miSmart|miTab'
  device: 'smartphone'
  models:
    - regex: 'miSmart[ \-_]?([^/]+) Build'
      model: 'miSmart $1'
    - regex: 'miTab[ \-_]?([^/]+) Build'
      device: 'tablet'
      model: 'miTab $1'

#Xiaomi
Xiaomi:
  regex: 'Xiaomi|(MI [a-z0-9]+|Mi-4c|MI-One[ _]?[a-z0-9]+)[);/ ]|HM ([^/;]+) Build|(2014501|2014011|201481[13]|201302[23]|2013061) Build|Redmi'
  device: 'smartphone'
  models:
    # specific smartphone models
    - regex: 'Xiaomi_2014501|2014501 Build'
      model: 'Hongmi 4G'
    - regex: 'Xiaomi_2014011|2014011 Build'
      model: 'Hongmi 1S'
    - regex: 'Xiaomi_201481[13]|201481[13] Build'
      model: 'Hongmi 2 4G'
    - regex: 'Xiaomi_201302[23]|201302[23] Build'
      model: 'Hongmi'
    - regex: 'Xiaomi_2013061|2013061 Build'
      model: 'MI 3'
    - regex: 'Mi-4c[);/ ]'
      model: 'MI 4C'

    - regex: 'Redmi Note ([^;/]+)? Build'
      model: 'Redmi Note $1'
      device: 'phablet'
    - regex: 'Redmi ([^;/]+)? Build'
      model: 'Redmi $1'
    - regex: 'MI Note ([^;/]+)? Build'
      model: 'MI Note $1'
      device: 'phablet'
    - regex: '(MI(?:-One)?[ _](?:[^;/]*))Build'
      model: '$1'
    - regex: '(MI [a-z0-9]+|MI-One[ _]?[a-z0-9]+)[);/ ]'
      model: '$1'
    - regex: 'HM Note ([^/;]+) Build'
      device: 'phablet'
      model: 'HM Note $1'
    - regex: 'HM ([^/;]+) Build'
      model: 'HM $1'


# Toshiba
Toshiba:
  regex: 'Toshiba|TSBNetTV/|portalmmm/[12].0 TS|T-01C|T-0[12]D|IS04|IS11T|AT1S0|AT300SE|AT(10-A|100|200|270|300|330|374|400|470|500|503|570|703|830)'
  device: 'smartphone'
  models:
    # explicit smartphone models
    - regex: 'T-01C'
      model: 'Regza T-01C'
    - regex: 'T-01D'
      model: 'Regza T-01D'
    - regex: 'T-02D'
      model: 'Regza T-02D'
    - regex: 'IS04'
      model: 'Regza IS04'
    - regex: 'IS11T'
      model: 'Regza IS11T'

    # explicit tablet models
    - regex: 'AT1S0'
      model: 'Regza AT1S0'
      device: 'tablet'
    - regex: 'AT300SE'
      model: 'Regza AT300SE'
      device: 'tablet'
    - regex: 'AT500a'
      model: 'Regza AT500a'
      device: 'tablet'
    - regex: 'AT(100|200|270|300|330|374|400|470|500|503|570|703|830)'
      model: 'Regza AT$1'
      device: 'tablet'
    - regex: 'AT10-A'
      model: 'Excite AT10-A'
      device: 'tablet'

    - regex: 'TSBNetTV/'
      device: 'tv'
      model: ''
    - regex: 'Toshiba[ /_\-]?([a-z0-9_ \-]+) Build'
      model: '$1'
    - regex: 'Toshiba[ /_\-]?([a-z0-9_\-]+)'
      model: '$1'

# Fly
Fly:
  regex: 'Fly(?!Flow|touch)|MERIDIAN-|(?:IQ[0-9]{3,})[ _]?(?:Quad|Firebird|Quattro|Turbo|Magic)?(?: Build|[;/\)])'
  device: 'smartphone'
  models:
    - regex: '(?:Fly_)?IQ310(?: Build|[;/\)])'
      model: 'Panorama'
      device: 'tablet'

    - regex: '(?:Fly_)?IQ236(?: Build|[;/\)])'
      model: 'Victory'
    - regex: '(?:Fly_)?IQ237(?: Build|[;/\)])'
      model: 'Dynamic'
    - regex: '(?:Fly_)?IQ238(?: Build|[;/\)])'
      model: 'Jazz'
    - regex: '(?:Fly_)?IQ240(?: Build|[;/\)])'
      model: 'Whizz'
    - regex: '(?:Fly_)?IQ255(?: Build|[;/\)])'
      model: 'Pride'
    - regex: '(?:Fly_)?IQ270(?: Firebird)?(?: Build|[;/\)])'
      model: 'Firebird'
    - regex: '(?:Fly_)?IQ275(?: Build|[;/\)])'
      model: 'Marathon'
    - regex: '(?:Fly_)?IQ285(?: Turbo)?(?: Build|[;/\)])'
      model: 'Turbo'
    - regex: '(?:Fly_)?IQ430(?: Build|[;/\)])'
      model: 'Evoke'
    - regex: '(?:Fly_)?IQ431(?: Build|[;/\)])'
      model: 'Glory'
    - regex: '(?:Fly_)?IQ432(?: Build|[;/\)])'
      model: 'Era Nano 1'
    - regex: '(?:Fly_)?IQ434(?: Build|[;/\)])'
      model: 'Era Nano 5'
    - regex: '(?:Fly_)?IQ436(?: Build|[;/\)])'
      model: 'Era Nano 3'
    - regex: '(?:Fly_)?IQ440(?: Build|[;/\)])'
      model: 'Energy'
    - regex: '(?:Fly_)?IQ441(?: Build|[;/\)])'
      model: 'Radiance'
    - regex: '(?:Fly_)?IQ442(?: Build|[;/\)])'
      model: 'Miracle'
    - regex: '(?:Fly_)?IQ442 Quad(?: Build|[;/\)])'
      model: 'Miracle 2'
    - regex: '(?:Fly_)?IQ443(?: Build|[;/\)])'
      model: 'Trend'
    - regex: '(?:Fly_)?IQ444(?: Quattro)?(?: Build|[;/\)])'
      model: 'Diamond 2'
    - regex: '(?:Fly_)?IQ445(?: Build|[;/\)])'
      model: 'Genius'
    - regex: '(?:Fly_)?IQ446(?: Magic)?(?: Build|[;/\)])'
      model: 'Magic'
    - regex: '(?:Fly_)?IQ447(?: Build|[;/\)])'
      model: 'Era Life 1'
    - regex: '(?:Fly_)?IQ448(?: Build|[;/\)])'
      model: 'Chic'
    - regex: '(?:Fly_)?IQ449(?: Build|[;/\)])'
      model: 'Pronto'
    - regex: '(?:Fly_)?IQ450(?: Build|[;/\)])'
      model: 'Horizon'
    - regex: '(?:Fly_)?IQ450[ _]Quattro(?: Build|[;/\)])'
      model: 'Horizon 2'
    - regex: '(?:Fly_)?IQ451(?: Build|[;/\)])'
      model: 'Vista'
    - regex: '(?:Fly_)?IQ452 Quad(?: Build|[;/\)])'
      model: 'Ego Vision 1'
    - regex: '(?:Fly_)?IQ454(?: Build|[;/\)])'
      model: 'Evo Tech 1'
    - regex: '(?:Fly_)?IQ456(?: Build|[;/\)])'
      model: 'Era Life 2'
    - regex: '(?:Fly_)?IQ4403(?: Build|[;/\)])'
      model: 'Energy 3'
    - regex: '(?:Fly_)?IQ4404(?: Build|[;/\)])'
      model: 'Spark'
    - regex: '(?:Fly_)?IQ4406(?: Build|[;/\)])'
      model: 'Era Nano 6'
    - regex: '(?:Fly_)?IQ4410 Quad(?: Build|[;/\)])'
      model: 'Phoenix'
    - regex: '(?:Fly_)?IQ4411(?: Build|[;/\)])'
      model: 'Energy 2'
    - regex: '(?:Fly_)?IQ4412 Quad(?: Build|[;/\)])'
      model: 'Coral'
    - regex: '(?:Fly_)?IQ4413[ _]Quad(?: Build|[;/\)])'
      model: 'Evo Chic 3'
    - regex: '(?:Fly_)?IQ4414 Quad(?: Build|[;/\)])'
      model: 'Evo Tech 3'
    - regex: '(?:Fly_)?IQ4415 Quad(?: Build|[;/\)])'
      model: 'Era Style 3'
    - regex: '(?:Fly_)?IQ4490(?: Build|[;/\)])'
      model: 'Era Nano 4'
    - regex: '(?:Fly_)?IQ4504 Quad(?: Build|[;/\)])'
      model: 'Evo Energy 5'
    - regex: '(?:Fly_)?IQ([0-9]+) ?(?:Quad|Firebird|Quattro)? Build'
      model: 'IQ$1'
    - regex: 'Fly[ _\-]?([a-z0-9_]+)/'
      model: '$1'
      device: 'feature phone'
    - regex: 'Flylife[ _\-]?([^/;]+) Build'
      model: 'Flylife $1'
      device: 'tablet'
    - regex: 'Fly[ _\-]?([a-z0-9]+)'
      model: '$1'

# Devices with undectable brand, but detectable model
Unknown:
  regex: 'WebTV/(\d+\.\d+)'
  device: 'tv'
  model: 'Web TV'

# Zeemi
Zeemi:
  regex: 'ZEEMI[ _-]'
  device: 'smartphone'
  models:
    - regex: 'ZEEMI[ _-]([^/;]+) Build'
      model: '$1'
    - regex: 'ZEEMI[ _-]([^/;)]+)[/;)]'
      model: '$1'

# ZTE
ZTE:
  regex: 'ZTE|AxonPhone|([a-z0-9]+)_USA_Cricket|(?:Blade S6|N9[15]8St|NX(?:403A|40[X2]|507J|503A|505J|506J|508J|510J|511J|513J|601J)|Z331|N9510|N9180|N9101|N9515|N952[01]|N9810|N799D|[UV]9180|[UV]9815|Z768G)[);/ ]'
  device: 'smartphone'
  models:
    # explicit smartphone models
    - regex: 'N799D[);/ ]'
      model: 'MTS Blaze 4'
    - regex: 'N918St[);/ ]'
      model: 'V5S'
    - regex: 'N958St[);/ ]'
      model: 'V5 Max'
    - regex: 'N9101[);/ ]'
      model: 'Imperial'
    - regex: 'N9180[);/ ]'
      model: 'V5'
    - regex: 'N9510[);/ ]'
      model: 'Wrap 4G'
    - regex: 'N9515[);/ ]'
      model: 'Wrap Sync'
    - regex: 'N9520[);/ ]'
      model: 'Boost Max'
    - regex: 'N9521[);/ ]'
      model: 'Boost Max+'
    - regex: 'N9810[);/ ]'
      model: 'Vital'
    - regex: 'NX40[X2][);/ ]'
      model: 'Nubia Z5 mini'
    - regex: 'NX403A[);/ ]'
      model: 'Nubia Z5S mini'
    - regex: 'NX503A[);/ ]'
      model: 'Nubia Z5S'
    - regex: 'NX506J[);/ ]'
      model: 'Nubia Z7'
    - regex: 'NX507J[);/ ]'
      model: 'Nubia Z7 mini'
    - regex: 'NX505J[);/ ]'
      model: 'Nubia Z7 max'
    - regex: 'NX508J[);/ ]'
      model: 'Nubia Z9'
    - regex: 'NX511J[);/ ]'
      model: 'Nubia Z9 mini'
    - regex: 'NX510J[);/ ]'
      model: 'Nubia Z9 max'
    - regex: 'NX513J[);/ ]'
      model: 'Nubia My Prague'
    - regex: 'NX601J[);/ ]'
      model: 'Nubia X6'
    - regex: '[UV]9180[);/ ]'
      model: 'V5 Red Bull'
    - regex: '[UV]9815[);/ ]'
      model: 'Grand Memo'
    - regex: 'Z331[);/ ]'
      model: 'Z331'
    - regex: 'Blade S6[);/ ]'
      model: 'Blade S6'
    - regex: 'Z768G[);/ ]'
      model: 'Midnight'
    - regex: 'ZTE[ _]([a-z0-9]+)'
      model: '$1'


# OnePlus
OnePlus:
  regex: '(?:A0001|A2005|E1003) Build'
  device: 'smartphone'
  models:
    - regex: 'A0001'
      model: 'One'
    - regex: 'A2005'
      model: 'Two'
    - regex: 'E1003'
      model: 'X'
